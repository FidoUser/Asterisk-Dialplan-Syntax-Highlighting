<?xml version="1.0" encoding="Windows-1252" ?>
<!--
@author www.xilitium.com
@version 2.0
-->
<NotepadPlus>
	<AutoComplete language="Asterisk_Dialplan" >
		<Environment ignoreCase="no" startFunc="(" stopFunc=")" paramSeparator="," additionalWordChar = "." />
		<!-- DIALPLAN FUNCTIONS -->
		<KeyWord name="AES_DECRYPT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Decrypt a string encoded in base64 with AES given a 16 character key.
				
				[Description]
				Returns the plain text string.
				
				[Asterisk Version]
				
				[Syntax]
				AES_DECRYPT(key,string)
				
				[Arguments]
				  &#x2022; key - AES Key
				  &#x2022; string - Input string">
				<Param name="STRING key"/>
				<Param name="STRING string"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AES_ENCRYPT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Encrypt a string with AES given a 16 character key.
				
				[Description]
				Returns an AES encrypted string encoded in base64.
				
				[Asterisk Version]
				
				[Syntax]
				AES_ENCRYPT(key,string)
				
				[Arguments]
				  &#x2022; key - AES Key
				  &#x2022; string - Input string">
				<Param name="STRING key"/>
				<Param name="STRING string"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AGC" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Apply automatic gain control to audio on a channel.
				
				[Description]
				The AGC function will apply automatic gain control to audio on the channel
				that this function is executed on.  Use rx for audio received from the channel
				and tx to apply AGC to the audio being sent to the channel. When using this
				function, you set a target audio level. It is primarily intended for use with
				analog lines, but could be useful for other channels, as well. The target volume
				is set with a number between 1 and 32768. Larger numbers are louder.
				
				[Asterisk Version]
				
				[Syntax]
				AGC(channeldirection)
				
				[Example]
				exten => 1,1,Set(AGC(rx)=8000)
				exten => 1,2,Set(AGC(tx)=off)
				
				[Arguments]
				  &#x2022; channeldirection - This can be either rx or tx">
				<Param name="STRING (rx|tx)"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AGENT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets information about an Agent.
				
				[Asterisk Version]
				
				[Syntax]
				AGENT(AgentId[:item])
				
				[Example]
				exten => 123,1,Set(foo=${AGENT(42:name)})
				
				[Arguments]
				  &#x2022; AgentId
				  &#x2022; item - The valid items to retrieve are:
				    &#x2022; status - (default) The status of the agent (LOGGEDIN | LOGGEDOUT)
				    &#x2022; password - Deprecated. The dialplan handles any agent authentication.
				    &#x2022; name - The name of the agent
				    &#x2022; mohclass - MusicOnHold class
				    &#x2022; channel - The name of the active channel for the Agent (AgentLogin)
				    &#x2022; fullchannel - The untruncated name of the active channel for the Agent (AgentLogin)">
				<Param name="STRING AgentId[:item]"/>
			</Overload>
		</KeyWord>
		<KeyWord name="AMI_CLIENT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ARRAY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Allows setting multiple variables at once

				[Description]
				The comma-separated list passed as a value to which the function is set will
				be interpreted as a set of values to which the comma-separated list of
				variable names in the argument should be set.
				Hence, Set(ARRAY(var1|var2)=1\,2) will set var1 to 1 and var2 to 2
				
				Note:
				remember to either backslash your commas in extensions.conf or quote the
				entire argument, since Set can take multiple arguments itself.
				
				[Asterisk Version]
				
				[Syntax]
				ARRAY(var1[|var2[...][|varN]]): - Asterisk 1.4 and lower
				ARRAY(var1[,var2[...][,varN]]): - Asterisk 1.6 and later
				
				[Example]
				Set(ARRAY(var1,var2)=1,2)
				
				[Arguments]
				  &#x2022; var1
				  &#x2022; var2
				  &#x2022; varN">
				<Param name="STRING var1" />
				<Param name="[STRING var2" />
				<Param name="[STRING varN]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="AST_CONFIG" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve a variable from a configuration file.
				
				[Description]
				This function reads a variable from an Asterisk configuration file.
				
				[Asterisk Version]
				(1.6+)
				
				[Syntax]
				AST_CONFIG(config_file,category,variable_name)
				
				[Example]
				;Goto current ${EXTEN} in SIP channel's default context
				exten => _XXXX,1,Goto(${AST_CONFIG(sip.conf,${CALLERID(num)},context)},${EXTEN},1)
				
				[Arguments]
				  &#x2022; config_file
				  &#x2022; category
				  &#x2022; variable_name">
				<Param name="STRING config_file" />
				<Param name="STRING category" />
				<Param name="STRING variable_name" />
			</Overload>
		</KeyWord>
		<KeyWord name="AST_SORCERY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get a field from a sorcery object
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				AST_SORCERY(module_name,object_type,object_id,field_name[,retrieval_method[,retrieval_details]])
				
				[Arguments]
				  &#x2022; module_name - The name of the module owning the sorcery instance.
				  &#x2022; object_type - The type of object to query.
				  &#x2022; object_id - The id of the object to query.
				  &#x2022; field_name - The name of the field.
				  &#x2022; retrieval_method - Fields that have multiple occurrences may be retrieved in two ways.
				    &#x2022; concat - Returns all matching fields concatenated in a single string separated by separator which defaults to ,.
				    &#x2022; single - Returns the nth occurrence of the field as specified by occurrence_number which defaults to 1.
				  &#x2022; retrieval_details - Specifies either the separator for concat or the occurrence number for single.">
				<Param name="STRING module_name" />
				<Param name="STRING object_type" />
				<Param name="INTEGER object_id" />
				<Param name="STRING field_name" />
				<Param name="[STRING retrieval_method" />
				<Param name="[STRING retrieval_details]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="AUDIOHOOK_INHERIT" func="yes">
			<Overload retVal="Function" descr="
				Deprecated. Used to set whether an audiohook may be inherited to another channel. Due to architectural 
				changes in Asterisk 12, audiohook inheritance is performed automatically and this function now lacks function.
				
				[Description]
				Prior to Asterisk 12, masquerades would occur under all sorts of situations which were hard to predict. 
				In Asterisk 12, masquerades only occur as a result of a small set of operations for which inheriting all 
				audiohooks from the original channel is now safe. So in Asterisk 12.5+, all audiohooks are inherited 
				without needing other controls expressing which audiohooks should be inherited under which conditions.
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="BASE64_DECODE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Decode a base64 string
				
				[Description]
				Returns the plain text string
				
				[Asterisk Version]
				
				[Syntax]
				BASE64_DECODE(string)
				
				[Arguments]
				  &#x2022; string - Input string.">
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="BASE64_ENCODE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Encode a string in base64.
				
				[Description]
				Returns the base64 string
				
				[Asterisk Version]
				
				[Syntax]
				BASE64_ENCODE(string)
				
				[Arguments]
				  &#x2022; string - Input string.">
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="BLACKLIST" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Check if the callerid is on the blacklist.
				
				[Description]
				Uses astdb to check if the Caller*ID is in family blacklist. Returns 1 or 0.
				
				[Asterisk Version]
				
				[Syntax]
				BLACKLIST()
				
				[Example]
				exten => 123,1,GotoIf(${BLACKLIST()}?black,1)
				exten => 123,n,Dial(SIP/200)
				exten => 123,n,Hangup()
				exten => black,1,Playback(tt-monkeys)
				exten => black,n,Hangup()
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALENDAR_BUSY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Determine if the calendar is marked busy at this time.
				
				[Description]
				Check the specified calendar's current busy status.
				
				[Asterisk Version]
				
				[Syntax]
				CALENDAR_BUSY(calendar)
				
				[Arguments]
				  &#x2022; calendar">
				<Param name="STRING calendar" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALENDAR_EVENT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get calendar event notification data from a notification call.
				
				[Description]
				Whenever a calendar event notification call is made, the event data may be accessed with this function.
				
				[Asterisk Version]
				
				[Syntax]
				CALENDAR_EVENT(field)
				
				[Arguments]
				  &#x2022; field
				    &#x2022; summary - The VEVENT SUMMARY property or Exchange event 'subject'
				    &#x2022; description - The text description of the event
				    &#x2022; organizer - The organizer of the event
				    &#x2022; location - The location of the eventt
				    &#x2022; categories - The categories of the event
				    &#x2022; priority - The priority of the event
				    &#x2022; calendar - The name of the calendar associated with the event
				    &#x2022; uid - The unique identifier for this event
				    &#x2022; start - The start time of the event
				    &#x2022; end - The end time of the event
				    &#x2022; busystate - The busy state of the event 0=FREE, 1=TENTATIVE, 2=BUSY">
				<Param name="STRING field" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALENDAR_QUERY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Query a calendar server and store the data on a channel
				
				[Description]
				Get a list of events in the currently accessible timeframe of the calendar The function returns 
				the id for accessing the result with CALENDAR_QUERY_RESULT()
				
				[Asterisk Version]
				
				[Syntax]
				CALENDAR_QUERY(calendar[,start[,end]])
				
				[Arguments]
				  &#x2022; calendar - The calendar that should be queried
				  &#x2022; start - The start time of the query (in seconds since epoch)
				  &#x2022; end - The end time of the query (in seconds since epoch)">
				<Param name="STRING calendar" />
				<Param name="[INTEGER start" />
				<Param name="[INTEGER end]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALENDAR_QUERY_RESULT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve data from a previously run CALENDAR_QUERY() call
				
				[Description]
				After running CALENDAR_QUERY and getting a result id, calling CALENDAR_QUERY with that id and a field 
				will return the data for that field. If multiple events matched the query, and entry is provided, 
				information from that event will be returned.
				
				[Asterisk Version]
				
				[Syntax]
				CALENDAR_QUERY_RESULT(id,field[,entry])
				
				[Arguments]
				  &#x2022; id - The query ID returned by CALENDAR_QUERY
				  &#x2022; field
				    &#x2022; getnum - number of events occurring during time range
				    &#x2022; summary - A summary of the event
				    &#x2022; description - The full event description
				    &#x2022; organizer - The event organizer
				    &#x2022; location - The event location
				    &#x2022; categories - The categories of the event
				    &#x2022; priority - The priority of the event
				    &#x2022; calendar - The name of the calendar associted with the event
				    &#x2022; uid - The unique identifier for the event
				    &#x2022; start - The start time of the event (in seconds since epoch)
				    &#x2022; end - The end time of the event (in seconds since epoch)
				    &#x2022; busystate - The busy status of the event 0=FREE, 1=TENTATIVE, 2=BUSY
				  &#x2022; entry - Return data from a specific event returned by the query">
				<Param name="STRING id" />
				<Param name="STRING field" />
				<Param name="[STRING entry]" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALENDAR_WRITE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Write an event to a calendar
				
				[Description]
				Example: CALENDAR_WRITE(calendar,field1,field2,field3)=val1,val2,val3
				The field and value arguments can easily be set/passed using the HASHKEYS() and HASH() functions
				  &#x2022; CALENDAR_SUCCESS - The status of the write operation to the calendar 
				    &#x2022; 1 - The event was successfully written to the calendar.
				    &#x2022; 0 - The event was not written to the calendar due to network issues, permissions, etc.
				
				[Asterisk Version]
				
				[Syntax]
				CALENDAR_WRITE(calendar,field[,...])
				
				[Arguments]
				  &#x2022; calendar - The calendar to write to
				  &#x2022; field
				    &#x2022; summary - A summary of the event
				    &#x2022; description - The full event description
				    &#x2022; organizer - The event organizer
				    &#x2022; location - The event location
				    &#x2022; categories - The categories of the event
				    &#x2022; priority - The priority of the event
				    &#x2022; uid - The unique identifier for the event
				    &#x2022; start - The start time of the event (in seconds since epoch)
				    &#x2022; end - The end time of the event (in seconds since epoch)
				    &#x2022; busystate - The busy status of the event 0=FREE, 1=TENTATIVE, 2=BUSY">
				<Param name="STRING calendar" />
				<Param name="STRING field" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALLCOMPLETION" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get or set a call completion configuration parameter for a channel.
				
				[Description]
				The CALLCOMPLETION function can be used to get or set a call completion configuration parameter for a channel.
				Note that setting a configuration parameter will only change the parameter for the duration of the call. 
				For more information see doc/AST.pdf. For more information on call completion parameters, see configs/ccss.conf.sample.
				
				[Asterisk Version]
				
				[Syntax]
				CALLCOMPLETION(option)
				
				[Arguments]
				  &#x2022; option - The allowable options are:
				    &#x2022; cc_agent_policy
				    &#x2022; cc_monitor_policy
				    &#x2022; cc_offer_timer
				    &#x2022; ccnr_available_timer
				    &#x2022; ccbs_available_timer
				    &#x2022; cc_recall_timer
				    &#x2022; cc_max_agents
				    &#x2022; cc_max_monitors
				    &#x2022; cc_callback_macro
				    &#x2022; cc_agent_dialstring">
				<Param name="STRING option" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALLERID" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets Caller*ID data on the channel.
				
				[Description]
				Gets or sets Caller*ID data on the channel. Uses channel callerid by default or optional callerid,
				if specified.
				
				The allowable values for the name-charset field are the following:
				
				  &#x2022; unknown - Unknown
				  &#x2022; iso8859-1 - ISO8859-1
				  &#x2022; withdrawn - Withdrawn
				  &#x2022; iso8859-2 - ISO8859-2
				  &#x2022; iso8859-3 - ISO8859-3
				  &#x2022; iso8859-4 - ISO8859-4
				  &#x2022; iso8859-5 - ISO8859-5
				  &#x2022; iso8859-7 - ISO8859-7
				  &#x2022; bmp - ISO10646 Bmp String
				  &#x2022; utf8 - ISO10646 UTF-8 String
				
				[Asterisk Version]
				
				[Syntax]
				CALLERID(datatype,CID)
				
				[Arguments]
				  &#x2022; datatype - The allowable datatypes are:
				    &#x2022; all                  &#x2022; name                  &#x2022; name-valid
				    &#x2022; name-charset         &#x2022; name-pres             &#x2022; num
				    &#x2022; num-valid            &#x2022; num-plan              &#x2022; num-pres
				    &#x2022; subaddr              &#x2022; subaddr-valid         &#x2022; subaddr-type
				    &#x2022; subaddr-odd          &#x2022; tag                   &#x2022; priv-all
				    &#x2022; priv-name            &#x2022; priv-name-valid       &#x2022; priv-name-charset
				    &#x2022; priv-name-pres       &#x2022; priv-num              &#x2022; priv-num-valid
				    &#x2022; priv-num-plan        &#x2022; priv-num-pres         &#x2022; priv-subaddr
				    &#x2022; priv-subaddr-valid   &#x2022; priv-subaddr-type     &#x2022; priv-subaddr-odd
				    &#x2022; priv-tag             &#x2022; ANI-all               &#x2022; ANI-name
				    &#x2022; ANI-name-valid       &#x2022; ANI-name-charset      &#x2022; ANI-name-pres
				    &#x2022; ANI-num              &#x2022; ANI-num-valid         &#x2022; ANI-num-plan
				    &#x2022; ANI-num-pres         &#x2022; ANI-tag               &#x2022; RDNIS
				    &#x2022; DNID                 &#x2022; dnid-num-plan         &#x2022; dnid-subaddr
				    &#x2022; dnid-subaddr-valid   &#x2022; dnid-subaddr-type     &#x2022; dnid-subaddr-odd
				  &#x2022; CID - Optional Caller*ID to parse instead of using the Caller*ID from the channel.
				    This parameter is only optional when reading the Caller*ID.">
				<Param name="STRING datatype" />
				<Param name="[STRING CID]" />
			</Overload>
		</KeyWord>
		<KeyWord name="CALLERPRES" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets Caller*ID presentation on the channel.
				
				[Description]
				Gets or sets Caller*ID presentation on the channel. This function is deprecated in favor of 
				CALLERID(num-pres) and CALLERID(name-pres). The following values are valid:
				
				  &#x2022; allowed_not_screened - Presentation Allowed, Not Screened.
				  &#x2022; allowed_passed_screen - Presentation Allowed, Passed Screen.
				  &#x2022; allowed_failed_screen - Presentation Allowed, Failed Screen.
				  &#x2022; allowed - Presentation Allowed, Network Number.
				  &#x2022; prohib_not_screened - Presentation Prohibited, Not Screened.
				  &#x2022; prohib_passed_screen - Presentation Prohibited, Passed Screen.
				  &#x2022; prohib_failed_screen - Presentation Prohibited, Failed Screen.
				  &#x2022; prohib - Presentation Prohibited, Network Number.
				  &#x2022; unavailable - Number Unavailable.
				
				[Asterisk Version]
				
				[Syntax]
				CALLERPRES()
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CDR" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets a CDR variable.
				
				[Description]
				All of the CDR field names are read-only, except for accountcode, userfield, and amaflags. 
				You may, however, supply a name not on the above list, and create your own variable, whose value can be changed 
				with this function, and this variable will be stored on the CDR.
				
				Note:
				CDRs can only be modified before the bridge between two channels is torn down. For example, 
				CDRs may not be modified after the Dial application has returned.
				
				Example: exten => 1,1,Set(CDR(userfield)=test)
				
				[Asterisk Version]
				
				[Syntax]
				CDR(name[,options])
				
				[Arguments]
				  &#x2022; name - CDR field name: 
				    &#x2022; clid - Caller ID.
				    &#x2022; lastdata - Last application arguments.
				    &#x2022; disposition - The final state of the CDR.
				      &#x2022; 0 - NO ANSWER
				      &#x2022; 1 - NO ANSWER (NULL record)
				      &#x2022; 2 - FAILED
				      &#x2022; 4 - BUSY
				      &#x2022; 8 - ANSWERED
				      &#x2022; 16 - CONGESTION
				  &#x2022; src - Source.
				  &#x2022; start - Time the call started.
				  &#x2022; amaflags
				    &#x2022; 1 - OMIT
				    &#x2022; 2 - BILLING
				    &#x2022; 3 - DOCUMENTATION 
				 &#x2022; dst - Destination.
				  &#x2022; answer - Time the call was answered.
				  &#x2022; accountcode - The channel's account code.
				  &#x2022; dcontext - Destination context.
				  &#x2022; end - Time the call ended.
				  &#x2022; uniqueid - The channel's unique id.
				  &#x2022; dstchannel - Destination channel.
				  &#x2022; duration - Duration of the call.
				  &#x2022; userfield - The channel's user specified field.
				  &#x2022; lastapp - Last application.
				  &#x2022; billsec - Duration of the call once it was answered.
				  &#x2022; channel - Channel name.
				  &#x2022; sequence - CDR sequence number.
				  &#x2022; options
				    &#x2022; f - Returns billsec or duration fields as floating point values.
				    &#x2022; u - Retrieves the raw, unprocessed value.">
				<Param name="STRING name" />
				<Param name="[STRING options]" />
			</Overload>
		</KeyWord>
		<KeyWord name="CDR_PROP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Set a property on a channel's CDR.
				
				[Description]
				This function sets a property on a channel's CDR. Properties alter the behavior of how the CDR operates 
				for that channel.
				
				[Asterisk Version]
				
				[Syntax]
				CDR_PROP(name)
				
				[Arguments]
				 &#x2022; name - The property to set on the CDR.
				   &#x2022; party_a - Set this channel as the preferred Party A when channels are associated together.
				     Write-Only
				   &#x2022; disable - Disable CDRs for this channel.
				     Write-Only">
				<Param name="STRING name" />
			</Overload>
		</KeyWord>
		<KeyWord name="CHANNEL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets/sets various pieces of information about the channel.
				
				[Description]
				Gets/sets various pieces of information about the channel, additional item may be available from the 
				channel driver.
				
				[Asterisk Version]
				
				[Syntax]
				CHANNEL(item)
				
				[Help]
				See: https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Function_CHANNEL
				
				[Arguments]
				  &#x2022; item - Standard items (provided by all channel technologies) are:
				    - amaflags              - accountcode         - audioreadformat      - audionativeformat
				    - audionativeformat     - audiowriteformat    - dtmf_features        - callgroup
				    - pickupgroup           - namedcallgroup      - namedpickupgroup     - channeltype
				    - checkhangup           - after_bridge_goto   - hangup_handler_pop   - hangup_handler_push
				    - hangup_handler_wipe   - language            - musicclass           - name
				    - parkinglot            - rxgain              - state                - secure_bridge_signaling
				    - secure_bridge_media   - tonezone            - transfercapability   - txgain
				    - videonativeformat     - trace               - peerip               - recvip
				    - recvport              - from                - uri                  - useragent
				    - peername              - t38passthrough      - rtpqos               - rtpdest
				    - rtpsource
				    - [ Technology: PJSIP ]
				      - rtp    - rtcp    - endpoint    - contact     - aor    - pjsip
				    - peerip                - peername            - secure_signaling     - secure_media
				    - dahdi_channel         - dahdi_span          - dahdi_type           - keypad_digits
				    - reversecharge         - no_media_path       - buffers              - echocan_mode
				    - faxdetect             - t38support          - h323id_url           - caller_h323id
				    - caller_dialeddigits   - caller_email        - callee_email         - callee_dialeddigits
				    - caller_url">
				<Param name="STRING item" />
			</Overload>
		</KeyWord>
		<KeyWord name="CHANNELS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets the list of channels, optionally filtering by a regular expression.
				
				[Description]
				Gets the list of channels, optionally filtering by a regular_expression. If no argument is provided, 
				all known channels are returned. The regular_expression must correspond to the POSIX.2 specification, 
				as shown in regex(7). The list returned will be space-delimited.
				
				[Asterisk Version]
				
				[Syntax]
				CHANNELS(regular_expression)
				
				[Arguments]
				  &#x2022; regular_expression">
				<Param name="STRING regular_expression" />
			</Overload>
		</KeyWord>
		<KeyWord name="CHECKSIPDOMAIN" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Checks if domain is a local domain.
				
				[Description]
				This function checks if the domain in the argument is configured as a local SIP domain that this Asterisk 
				server is configured to handle. Returns the domain name if it is locally handled, otherwise an empty string. 
				Check the domain= configuration in sip.conf.
				
				[Asterisk Version]
				
				[Syntax]
				CHECKSIPDOMAIN(domain)
				
				[Arguments]
				  &#x2022; domain">
				<Param name="STRING domain" />
			</Overload>
		</KeyWord>
		<KeyWord name="CHECK_MD5" func="yes">
			<Overload retVal="Function" descr="
				Deprecated. Use MD5 function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CONFBRIDGE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Set a custom dynamic bridge, user, or menu profile on a channel for the ConfBridge application using the same options defined in confbridge.conf.
				Returns the resulting value.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				CONFBRIDGE_INFO(type,option)
				
				[Example]
				In this example the custom set user profile on this channel will automatically be used by the ConfBridge app.
				exten => 1,1,Answer()
				exten => 1,n,Set(CONFBRIDGE(user,announce_join_leave)=yes)
				exten => 1,n,Set(CONFBRIDGE(user,startmuted)=yes)
				exten => 1,n,ConfBridge(1)
				
				This example shows how to use a predefined user or bridge profile in confbridge.conf as a template for a dynamic profile. Here we make a admin/marked 
				user out of the default_user profile that is already defined in confbridge.conf.
				exten => 1,1,Answer()
				exten => 1,n,Set(CONFBRIDGE(user,template)=default_user)
				exten => 1,n,Set(CONFBRIDGE(user,admin)=yes)
				exten => 1,n,Set(CONFBRIDGE(user,marked)=yes)
				exten => 1,n,ConfBridge(1)
				
				[Arguments]
				  &#x2022; type - Type refers to which type of profile the option belongs too. Type can be bridge, user, or menu.
				  &#x2022; option - Option refers to confbridge.conf option that is being set dynamically on this channel, or clear to remove already applied options from the channel.">
				<Param name="STRING type" />
				<Param name="STRING option" />
			</Overload>
		</KeyWord>
		<KeyWord name="CONFBRIDGE_INFO" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get information about a ConfBridge conference.
				
				[Description]
				This function returns a non-negative integer for valid conference identifiers (0 or 1 for locked) and &#x22;&#x22; 
				for invalid conference identifiers.
				
				[Asterisk Version]
				
				[Syntax]
				CONFBRIDGE_INFO(type,conf)
				
				[Arguments]
				  &#x2022; type - Type can be parties, admins, marked, or locked.
				  &#x2022; conf - Conf refers to the name of the conference being referenced.">
				<Param name="STRING type" />
				<Param name="STRING conf" />
			</Overload>
		</KeyWord>
		<KeyWord name="CONNECTEDLINE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets Connected Line data on the channel.
				
				[Description]
				Gets or sets Connected Line data on the channel.
				The allowable values for the name-charset field are the following:
				
				  &#x2022; unknown - Unknown
				  &#x2022; iso8859-1 - ISO8859-1
				  &#x2022; withdrawn - Withdrawn
				  &#x2022; iso8859-2 - ISO8859-2
				  &#x2022; iso8859-3 - ISO8859-3
				  &#x2022; iso8859-4 - ISO8859-4
				  &#x2022; iso8859-5 - ISO8859-5
				  &#x2022; iso8859-7 - ISO8859-7
				  &#x2022; bmp - ISO10646 Bmp String
				  &#x2022; utf8 - ISO10646 UTF-8 String
				
				[Asterisk Version]
				
				[Syntax]
				CONNECTEDLINE(datatype,i)
				
				[Arguments]
				  &#x2022; datatype - The allowable datatypes are:
				    &#x2022; all                  &#x2022; name                  &#x2022; name-valid
				    &#x2022; name-charset         &#x2022; name-pres             &#x2022; num
				    &#x2022; num-valid            &#x2022; num-plan              &#x2022; num-pres
				    &#x2022; subaddr              &#x2022; subaddr-valid         &#x2022; subaddr-type
				    &#x2022; subaddr-odd          &#x2022; tag                   &#x2022; priv-all
				    &#x2022; priv-name            &#x2022; priv-name-valid       &#x2022; priv-name-charset
				    &#x2022; priv-name-pres       &#x2022; priv-num              &#x2022; priv-num-valid
				    &#x2022; priv-num-plan        &#x2022; priv-num-pres         &#x2022; priv-subaddr
				    &#x2022; priv-subaddr-valid   &#x2022; priv-subaddr-type     &#x2022; priv-subaddr-odd
				    &#x2022; priv-tag
				  &#x2022; i - If set, this will prevent the channel from sending out protocol messages because 
				    of the value being set">
				<Param name="STRING datatype" />
				<Param name="STRING i" />
			</Overload>
		</KeyWord>
		<KeyWord name="CSV_QUOTE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Quotes a given string for use in a CSV file, escaping embedded quotes as necessary
				
				[Description]
				Example: ${CSV_QUOTE(	&#x22;a,b &#x22; 123)} will return  &#x22;&#x22;&#x22;a,b &#x22;&#x22; 123	&#x22;
				
				[Asterisk Version]
				
				[Syntax]
				CSV_QUOTE(string)
				
				[Arguments]
				  &#x2022; string">
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="CURL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve content from a remote web or ftp server
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				CURL(url,post-data)
				
				[Arguments]
				  &#x2022; url
				  &#x2022; post-data - If specified, an HTTP POST will be performed with the content of post-data, instead of an HTTP GET (default).">
				<Param name="STRING url" />
				<Param name="STRING post-data" />
			</Overload>
		</KeyWord>
		<KeyWord name="CURLOPT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Sets various options for future invocations of CURL.
				
				[Description]
				Options may be set globally or per channel. Per-channel settings will override global settings.
				
				[Asterisk Version]
				
				[Syntax]
				CURLOPT(key)
				
				[Arguments]
				  &#x2022; key
				    &#x2022; cookie - A cookie to send with the request. Multiple cookies are supported.
				    &#x2022; conntimeout - Number of seconds to wait for a connection to succeed
				    &#x2022; dnstimeout - Number of seconds to wait for DNS to be resolved
				    &#x2022; ftptext - For FTP URIs, force a text transfer (boolean)
				    &#x2022; ftptimeout - For FTP URIs, number of seconds to wait for a server response
				    &#x2022; header - Include header information in the result (boolean)
				    &#x2022; httptimeout - For HTTP(S) URIs, number of seconds to wait for a server response
				    &#x2022; maxredirs - Maximum number of redirects to follow
				    &#x2022; proxy - Hostname or IP address to use as a proxy server
				    &#x2022; proxytype - Type of proxy
				      &#x2022; http
				      &#x2022; socks4
				      &#x2022; socks5
				    &#x2022; proxyport - Port number of the proxy
				    &#x2022; proxyuserpwd - A username:password combination to use for authenticating requests through a proxy
				    &#x2022; referer - Referer URL to use for the request
				    &#x2022; useragent - UserAgent string to use for the request
				    &#x2022; userpwd - A username:password to use for authentication when the server response to an initial request 
				      indicates a 401 status code.
				    &#x2022; ssl_verifypeer - Whether to verify the server certificate against a list of known root certificate 
				      authorities (boolean).
				    &#x2022; hashcompat - Assuming the responses will be in key1=value1&key2=value2 format, reformat the response 
				      such that it can be used by the HASH function. 
				      &#x2022; yes
				      &#x2022; no
				      &#x2022; legacy - Also translate + to the space character, in violation of current RFC standards.">
				<Param name="STRING key" />
			</Overload>
		</KeyWord>
		<KeyWord name="CUT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Slices and dices strings, based upon a named delimiter.
				
				[Description]
				Cut out information from a string ( varname), based upon a named delimiter.
				
				[Asterisk Version]
				
				[Syntax]
				CUT(varname,char-delim,range-spec)
				
				[Arguments]
				  &#x2022; varname - Variable you want cut
				  &#x2022; char-delim - Delimiter, defaults to -
				  &#x2022; range-spec - Number of the field you want (1-based offset), may also be specified as a 
				    range (with -) or group of ranges and fields (with &#x26;)">
				<Param name="STRING varname" />
				<Param name="STRING char-delim" />
				<Param name="INTEGER range-spec" />
			</Overload>
		</KeyWord>
		<KeyWord name="DB" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Read from or write to the Asterisk database.
				
				[Description]
				This function will read from or write a value to the Asterisk database. On a read, this function 
				returns the corresponding value from the database, or blank if it does not exist. Reading a 
				database value will also set the variable DB_RESULT. If you wish to find out if an entry exists, 
				use the DB_EXISTS function.
				
				[Asterisk Version]
				
				[Syntax]
				DB(family/key)
				
				[Arguments]
				  &#x2022; family
				  &#x2022; key">
				<Param name="STRING family" />
				<Param name="STRING key" />
			</Overload>
		</KeyWord>
		<KeyWord name="DB_DELETE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Return a value from the database and delete it.
				
				[Description]
				This function will retrieve a value from the Asterisk database and then remove that key from the database.
				DB_RESULT will be set to the key's value if it exists.
				
				Note:
				If live_dangerously in asterisk.conf is set to no, this function can only be read from the dialplan, 
				and not directly from external protocols. It can, however, be executed as a write operation 
				(DB_DELETE(family, key)=ignored)
				
				[Asterisk Version]
				
				[Syntax]
				DB_DELETE(family/key)
				
				[Arguments]
				  &#x2022; family
				  &#x2022; key">
				<Param name="STRING family" />
				<Param name="STRING key" />
			</Overload>
		</KeyWord>
		<KeyWord name="DB_EXISTS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Check to see if a key exists in the Asterisk database.
				
				[Description]
				This function will check to see if a key exists in the Asterisk database. If it exists, the function will return 1.
				If not, it will return 0. Checking for existence of a database key will also set the variable DB_RESULT to the key's 
				value if it exists.
				
				[Asterisk Version]
				
				[Syntax]
				DB_EXISTS(family/key)
				
				[Arguments]
				  &#x2022; family
				  &#x2022; key">
				<Param name="STRING family" />
				<Param name="STRING key" />
			</Overload>
		</KeyWord>
		<KeyWord name="DB_KEYS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Obtain a list of keys within the Asterisk database.
				
				[Description]
				This function will return a comma-separated list of keys existing at the prefix specified within the 
				Asterisk database. If no argument is provided, then a list of key families will be returned.
				
				[Asterisk Version]
				
				[Syntax]
				DB_KEYS(prefix)
				
				[Arguments]
				  &#x2022; prefix">
				<Param name="STRING prefix" />
			</Overload>
		</KeyWord>
		<KeyWord name="DEC" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Decrements the value of a variable, while returning the updated value to the dialplan
				
				[Description]
				Decrements the value of a variable, while returning the updated value to the dialplan
				
				Example: DEC(MyVAR) - Decrements MyVar
				
				Note:
				DEC(${MyVAR}) - Is wrong, as DEC expects the variable name, not its value

				[Asterisk Version]
				
				[Syntax]
				DEC(variable)
				
				[Arguments]
				  &#x2022; variable - The variable name to be manipulated, without the braces.">
				<Param name="STRING variable" />
			</Overload>
		</KeyWord>
		<KeyWord name="DENOISE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Apply noise reduction to audio on a channel.
				
				[Description]
				The DENOISE function will apply noise reduction to audio on the channel that it is executed on.
				It is very useful for noisy analog lines, especially when adjusting gains or using AGC. Use rx 
				for audio received from the channel and tx to apply the filter to the audio being sent to the channel.
				
				[Asterisk Version]
				
				[Syntax]
				DENOISE(channeldirection)
				
				[Example]
				exten => 1,1,Set(DENOISE(rx)=on)
				exten => 1,2,Set(DENOISE(tx)=off)
				
				[Arguments]
				  &#x2022; channeldirection - This can be either rx or tx the values that can be set to this are either on and off">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DEVICE_STATE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get or Set a device state.
				
				[Description]
				The DEVICE_STATE function can be used to retrieve the device state from any device state provider.
				For example:
				NoOp(SIP/mypeer has state ${DEVICE_STATE(SIP/mypeer)})
				NoOp(Conference number 1234 has state ${DEVICE_STATE(MeetMe:1234)})
				The DEVICE_STATE function can also be used to set custom device state from the dialplan.
				
				The Custom: prefix must be used. For example:
				Set(DEVICE_STATE(Custom:lamp1)=BUSY)
				Set(DEVICE_STATE(Custom:lamp2)=NOT_INUSE)
				You can subscribe to the status of a custom device state using a hint in the dialplan:
				exten => 1234,hint,Custom:lamp1
				
				The possible values for both uses of this function are:
				UNKNOWN | NOT_INUSE | INUSE | BUSY | INVALID | UNAVAILABLE | RINGING | RINGINUSE | ONHOLD
				
				[Asterisk Version]
				
				[Syntax]
				DEVICE_STATE(device)
				
				[Arguments]
				  &#x2022; device">
				<Param name="STRING device" />
			</Overload>
		</KeyWord>
		<KeyWord name="DEVSTATE" func="yes">
			<Overload retVal="Function" descr="
				Deprecated. Use DEVICE_STATE function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DIALGROUP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Manages a group of users for dialing.
				
				[Description]
				Presents an interface meant to be used in concert with the Dial application, by presenting a list of 
				channels which should be dialled when referenced.
				
				When DIALGROUP is read from, the argument is interpreted as the particular group for which a dial should 
				be attempted. When DIALGROUP is written to with no arguments, the entire list is replaced with the argument 
				specified.
				
				Functionality is similar to a queue, except that when no interfaces are available, execution may continue in 
				the dialplan. This is useful when you want certain people to be the first to answer any calls, with immediate 
				fallback to a queue when the front line people are busy or unavailable, but you still want front line people 
				to log in and out of that group, just like a queue.
				
				[Asterisk Version]
				
				[Syntax]
				DIALGROUP(group,op)
				
				[Example]
				exten => 1,1,Set(DIALGROUP(mygroup,add)=SIP/10)
				exten => 1,n,Set(DIALGROUP(mygroup,add)=SIP/20)
				exten => 1,n,Dial(${DIALGROUP(mygroup)})
				
				[Arguments]
				  &#x2022; group
				  &#x2022; op - The operation name, possible values are:
				    add - add a channel name or interface (write-only)
				    del - remove a channel name or interface (write-only)">
				<Param name="STRING group" />
				<Param name="STRING op" />
			</Overload>
		</KeyWord>
		<KeyWord name="DIALPLAN_EXISTS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Checks the existence of a dialplan target.
				
				[Description]
				This function returns 1 if the target exits. Otherwise, it returns 0.
				
				[Asterisk Version]
				
				[Syntax]
				DIALPLAN_EXISTS(context,extension,priority)
				
				[Arguments]
				  &#x2022; context
				  &#x2022; extension
				  &#x2022; priority">
				<Param name="STRING context" />
				<Param name="STRING extension" />
				<Param name="STRING priority" />
			</Overload>
		</KeyWord>
		<KeyWord name="DUNDILOOKUP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Do a DUNDi lookup of a phone number.
				
				[Description]
				This will do a DUNDi lookup of the given phone number.
				This function will return the Technology/Resource found in the first result in the DUNDi lookup.
				If no results were found, the result will be blank.
				
				[Asterisk Version]
				
				[Syntax]
				DUNDILOOKUP(number,context,options)
				
				[Arguments]
				  &#x2022; number
				  &#x2022; context - If not specified the default will be e164.
				  &#x2022; options
				    &#x2022; b - Bypass the internal DUNDi cache">
				<Param name="INTEGER number" />
				<Param name="STRING context" />
				<Param name="STRING options" />
			</Overload>
		</KeyWord>
		<KeyWord name="DUNDIQUERY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Initiate a DUNDi query.
				
				[Description]
				This will do a DUNDi lookup of the given phone number.
				The result of this function will be a numeric ID that can be used to retrieve the results 
				with the DUNDIRESULT function.
				
				[Asterisk Version]
				
				[Syntax]
				DUNDIQUERY(number,context,options)
				
				[Arguments]
				  &#x2022; number
				  &#x2022; context - If not specified the default will be e164.
				  &#x2022; options
				    &#x2022; b - Bypass the internal DUNDi cache">
				<Param name="INTEGER number" />
				<Param name="STRING context" />
				<Param name="STRING options" />
			</Overload>
		</KeyWord>
		<KeyWord name="DUNDIRESULT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve results from a DUNDIQUERY.
				
				[Description]
				This function will retrieve results from a previous use\n&#x22; of the DUNDIQUERY function.
				
				[Asterisk Version]
				
				[Syntax]
				DUNDIRESULT(id,resultnum)
				
				[Arguments]
				  &#x2022; id - The identifier returned by the DUNDIQUERY function.
				  &#x2022; resultnum
				    &#x2022; number - The number of the result that you want to retrieve, this starts at 1
				    &#x2022; getnum - The total number of results that are available.">
				<Param name="STRING id" />
				<Param name="STRING resultnum" />
			</Overload>
		</KeyWord>
		<KeyWord name="ENUMLOOKUP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				General or specific querying of NAPTR records for ENUM or ENUM-like DNS pointers.
				
				[Description]
				For more information see doc/AST.pdf.
				
				[Asterisk Version]
				
				[Syntax]
				ENUMLOOKUP(number,method-type,options,record&#x23;,zone-suffix)
				
				[Arguments]
				  &#x2022; number
				  &#x2022; method-type - If no method-type is given, the default will be sip.
				  &#x2022; options
				    &#x2022; c - Returns an integer count of the number of NAPTRs of a certain RR type.
				    Combination of c and Method-type of ALL will return a count of all NAPTRs for the record or -1 on error.
				    &#x2022; u - Returns the full URI and does not strip off the URI-scheme.
				    &#x2022; s - Triggers ISN specific rewriting.
				    &#x2022; i - Looks for branches into an Infrastructure ENUM tree.
				    &#x2022; d - for a direct DNS lookup without any flipping of digits.
				  &#x2022; record&#x23; - If no record&#x23; is given, defaults to 1.
				  &#x2022; zone-suffix - If no zone-suffix is given, the default will be e164.arpa">
				<Param name="STRING number" />
				<Param name="STRING method-type" />
				<Param name="STRING options" />
				<Param name="INTEGER record" />
				<Param name="STRING zone-suffix" />
			</Overload>
		</KeyWord>
		<KeyWord name="ENUMQUERY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Initiate an ENUM query.
				
				[Description]
				This will do a ENUM lookup of the given phone number.
				
				[Asterisk Version]
				
				[Syntax]
				ENUMQUERY(number,method-type,zone-suffix)
				
				[Arguments]
				  &#x2022; number
				  &#x2022; method-type - If no method-type is given, the default will be sip.
				  &#x2022; zone-suffix - If no zone-suffix is given, the default will be e164.arpa">
				<Param name="STRING number" />
				<Param name="STRING method-type" />
				<Param name="STRING zone-suffix" />
			</Overload>
		</KeyWord>
		<KeyWord name="ENUMRESULT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve results from a ENUMQUERY.
				
				[Description]
				This function will retrieve results from a previous use of the ENUMQUERY function.
				
				[Asterisk Version]
				
				[Syntax]
				ENUMRESULT(id,resultnum)
				
				[Arguments]
				  &#x2022; id - The identifier returned by the ENUMQUERY function.
				  &#x2022; resultnum - The number of the result that you want to retrieve.
				    Results start at 1. If this argument is specified as getnum, then it will return the total 
				    number of results that are available or -1 on error.">
				<Param name="STRING id" />
				<Param name="INTEGER resultnum" />
			</Overload>
		</KeyWord>
		<KeyWord name="ENV" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets the environment variable specified.
				
				[Description]
				Variables starting with AST_ are reserved to the system and may not be set.
				
				[Asterisk Version]
				
				[Syntax]
				ENV(varname)
				
				[Arguments]
				  &#x2022; varname - Environment variable name">
				<Param name="STRING varname" />
			</Overload>
		</KeyWord>
		<KeyWord name="EVAL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Evaluate stored variables
				
				[Description]
				Using EVAL basically causes a string to be evaluated twice. When a variable or expression is in the 
				dialplan, it will be evaluated at runtime. However, if the results of the evaluation is in fact another 
				variable or expression, using EVAL will have it evaluated a second time.
				
				Example: If the MYVAR contains OTHERVAR, then the result of ${EVAL( MYVAR)} in the dialplan will be the 
				contents of OTHERVAR. Normally just putting MYVAR in the dialplan the result would be OTHERVAR.
				
				[Asterisk Version]
				
				[Syntax]
				EVAL(variable)
				
				[Arguments]
				  &#x2022; variable">
				<Param name="STRING variable" />
			</Overload>
		</KeyWord>
		<KeyWord name="EXCEPTION" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve the details of the current dialplan exception.
				
				[Description]
				Retrieve the details (specified field) of the current dialplan exception.
				
				[Asterisk Version]
				
				[Syntax]
				EXCEPTION(field)
				
				[Arguments]
				  &#x2022; field
				    &#x2022; reason - INVALID, ERROR, RESPONSETIMEOUT, ABSOLUTETIMEOUT, or custom value set by the 
				      RaiseException() application
				    &#x2022; context - The context executing when the exception occurred.
				    &#x2022; exten - The extension executing when the exception occurred.
				    &#x2022; priority - The numeric priority executing when the exception occurred.">
				<Param name="STRING field" />
			</Overload>
		</KeyWord>
		<KeyWord name="EXISTS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Test the existence of a value.
				
				[Description]
				Returns 1 if exists, 0 otherwise.
				
				[Asterisk Version]
				
				[Syntax]
				EXISTS(data)
				
				[Arguments]
				  &#x2022; data">
				<Param name="STRING data" />
			</Overload>
		</KeyWord>
		<KeyWord name="EXTENSION_STATE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get an extension's state.
				
				[Description]
				The EXTENSION_STATE function can be used to retrieve the state from any hinted extension. For example:
				NoOp(1234@default has state ${EXTENSION_STATE(1234)})
				NoOp(4567@home has state ${EXTENSION_STATE(4567@home)})
				
				The possible values returned by this function are:
				UNKNOWN | NOT_INUSE | INUSE | BUSY | INVALID | UNAVAILABLE | RINGING | RINGINUSE | HOLDINUSE | ONHOLD
				
				[Asterisk Version]
				
				[Syntax]
				EXTENSION_STATE(extension@context)
				
				[Arguments]
				  &#x2022; extension
				  &#x2022; context - If it is not specified defaults to default.">
				<Param name="STRING data" />
				<Param name="STRING context" />
			</Overload>
		</KeyWord>
		<KeyWord name="FAXOPT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets/sets various pieces of information about a fax session.
				
				[Description]
				FAXOPT can be used to override the settings for a FAX session listed in res_fax.conf, it can also be 
				used to retrieve information about a FAX session that has finished eg. pages/status.
				
				[Asterisk Version]
				
				[Syntax]
				FAXOPT(item)
				
				[Arguments]
				  &#x2022; item
				    &#x2022; ecm - R/W Error Correction Mode (ECM) enable with 'yes', disable with 'no'.
				    &#x2022; error - R/O FAX transmission error code upon failure.
				    &#x2022; filename - R/O Filename of the first file of the FAX transmission.
				    &#x2022; filenames - R/O Filenames of all of the files in the FAX transmission (comma separated).
				    &#x2022; headerinfo - R/W FAX header information.
				    &#x2022; localstationid - R/W Local Station Identification.
				    &#x2022; minrate - R/W Minimum transfer rate set before transmission.
				    &#x2022; maxrate - R/W Maximum transfer rate set before transmission.
				    &#x2022; modem - R/W Modem type (v17/v27/v29).
				    &#x2022; gateway - R/W T38 fax gateway, with optional fax activity timeout in seconds (yes[,timeout]/no)
				    &#x2022; faxdetect - R/W Enable FAX detect with optional timeout in seconds (yes,t38,cng[,timeout]/no)
				    &#x2022; pages - R/O Number of pages transferred.
				    &#x2022; rate - R/O Negotiated transmission rate.
				    &#x2022; remotestationid - R/O Remote Station Identification after transmission.
				    &#x2022; resolution - R/O Negotiated image resolution after transmission.
				    &#x2022; sessionid - R/O Session ID of the FAX transmission.
				    &#x2022; status - R/O Result Status of the FAX transmission.
				    &#x2022; statusstr - R/O Verbose Result Status of the FAX transmission.
				    &#x2022; t38timeout - R/W The timeout used for T.38 negotiation.">
				<Param name="STRING item" />
			</Overload>
		</KeyWord>
		<KeyWord name="FEATURE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get or set a feature option on a channel.
				
				[Description]
				When this function is used as a read, it will get the current value of the specified feature option for this channel. 
				It will be the value of this option configured in features.conf if a channel specific value has not been set. 
				This function can also be used to set a channel specific value for the supported feature options.
				
				[Asterisk Version]
				
				[Syntax]
				FEATURE(option_name)
				
				[Arguments]
				  &#x2022; option_name - The allowed values are:
				    &#x2022; inherit - Inherit feature settings made in FEATURE or FEATUREMAP to child channels.
				    &#x2022; featuredigittimeout - Milliseconds allowed between digit presses when entering a feature code.
				    &#x2022; transferdigittimeout - Seconds allowed between digit presses when dialing a transfer destination
				    &#x2022; atxfernoanswertimeout - Seconds to wait for attended transfer destination to answer
				    &#x2022; atxferdropcall - Hang up the call entirely if the attended transfer fails
				    &#x2022; atxferloopdelay - Seconds to wait between attempts to re-dial transfer destination
				    &#x2022; atxfercallbackretries - Number of times to re-attempt dialing a transfer destination
				    &#x2022; xfersound - Sound to play to during transfer and transfer-like operations.
				    &#x2022; xferfailsound - Sound to play to a transferee when a transfer fails
				    &#x2022; atxferabort - Digits to dial to abort an attended transfer attempt
				    &#x2022; atxfercomplete - Digits to dial to complete an attended transfer
				    &#x2022; atxferthreeway - Digits to dial to change an attended transfer into a three-way call
				    &#x2022; pickupexten - Digits used for picking up ringing calls
				    &#x2022; pickupsound - Sound to play to picker when a call is picked up
				    &#x2022; pickupfailsound - Sound to play to picker when a call cannot be picked up
				    &#x2022; courtesytone - Sound to play when automon or automixmon is activated
				    &#x2022; recordingfailsound - Sound to play when automon or automixmon is attempted but fails to start
				    &#x2022; transferdialattempts - Number of dial attempts allowed when attempting a transfer
				    &#x2022; transferretrysound - Sound that is played when an incorrect extension is dialed and the transferer should try again.
				    &#x2022; transferinvalidsound - Sound that is played when an incorrect extension is dialed and the transferer has no attempts remaining.">
				<Param name="STRING option_name" />
			</Overload>
		</KeyWord>
		<KeyWord name="FEATUREMAP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get or set a feature map to a given value on a specific channel.
				
				[Description]
				When this function is used as a read, it will get the current digit sequence mapped to the specified feature for this channel. 
				This value will be the one configured in features.conf if a channel specific value has not been set. This function can also 
				be used to set a channel specific value for a feature mapping.
				
				[Asterisk Version]
				
				[Syntax]
				FEATUREMAP(feature_name)
				
				[Arguments]
				  &#x2022; feature_name - The allowed values are:
				    &#x2022; atxfer - Attended Transfer
				    &#x2022; blindxfer - Blind Transfer
				    &#x2022; automon - Auto Monitor
				    &#x2022; disconnect - Call Disconnect
				    &#x2022; parkcall - Park Call
				    &#x2022; automixmon - Auto MixMonitor">
				<Param name="STRING feature_name" />
			</Overload>
		</KeyWord>
		<KeyWord name="FIELDNUM" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Return the 1-based offset of a field in a list
				
				[Description]
				Search the variable named varname for the string value delimited by delim and return a 1-based offset as to its location. 
				If not found or an error occured, return 0.
				
				The delimiter may be specified as a special or extended ASCII character, by encoding it. The characters \n, \r, and \t are
				all recognized as the newline, carriage return, and tab characters, respectively. Also, octal and hexadecimal specifications 
				are recognized by the patterns \0nnn and \xHH, respectively.
				For example, if you wanted to encode a comma as the delimiter, you could use either \054 or \x2C.
				
				Example: If ${example} contains ex-amp-le, then ${FIELDNUM(example,-,amp)} returns 2.
				
				[Asterisk Version]
				
				[Syntax]
				FIELDNUM(varname,delim,value)
				
				[Arguments]
				  &#x2022; varname
				  &#x2022; delim
				  &#x2022; value">
				<Param name="STRING varname" />
				<Param name="STRING delim" />
				<Param name="STRING value" />
			</Overload>
		</KeyWord>
		<KeyWord name="FIELDQTY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Count the fields with an arbitrary delimiter
				
				[Description]
				The delimiter may be specified as a special or extended ASCII character, by encoding it. The characters \n, \r, and \t are
				all recognized as the newline, carriage return, and tab characters, respectively. Also, octal and hexadecimal specifications 
				are recognized by the patterns \0nnn and \xHH, respectively. For example, if you wanted to encode a comma as the delimiter, 
				you could use either \054 or \x2C.
				
				Example: If ${example} contains ex-amp-le, then ${FIELDQTY(example,-)} returns 3.
				
				[Asterisk Version]
				
				[Syntax]
				FIELDQTY(varname,delim)
				
				[Arguments]
				  &#x2022; varname
				  &#x2022; delim">
				<Param name="STRING varname" />
				<Param name="STRING delim" />
			</Overload>
		</KeyWord>
		<KeyWord name="FILE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Read or write text file.
				
				[Description]
				Read and write text file in character and line mode.
				
				Note:
				If live_dangerously in asterisk.conf is set to no, this function can only be executed from the dialplan, 
				and not directly from external protocols.
				
				[Asterisk Version]
				
				[Syntax]
				FILE(filename,offset,length,options,format)
				
				[Example]
				; Read mode (byte):
				Set(foo=${FILE(/tmp/test.txt)})
				; Read mode (line):
				Set(foo=${FILE(/tmp/test.txt,3,1,l)})
				; Write mode (byte):
				Set(FILE(/tmp/test.txt)=bar)
				; Write mode (line):
				Set(FILE(/tmp/foo.txt,0,1,l)=bar)
				
				[Help]
				See: https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Function_FILE
				
				[Arguments]
				  &#x2022; filename
				  &#x2022; offset - Maybe specified as any number. If negative, offset specifies the number of bytes back
				    from the end of the file.
				  &#x2022; length - If specified, will limit the length of the data read to that size. If negative, 
				    trims length bytes from the end of the file.
				  &#x2022; options
				    &#x2022; l - Line mode: offset and length are assumed to be measured in lines, instead of byte offsets.
				    &#x2022; a - In write mode only, the append option is used to append to the end of the file, instead of 
				      overwriting the existing file.
				    &#x2022; d - In write mode and line mode only, this option does not automatically append a newline 
				      string to the end of a value. 
				      This is useful for deleting lines, instead of setting them to blank.
				  &#x2022; format - The format parameter may be used to delimit the type of line terminators in line mode.
				    &#x2022; u - Unix newline format.
				    &#x2022; d - DOS newline format.
				    &#x2022; m - Macintosh newline format.
				
				  Note: If not specified, an attempt will be made to determine the newline format type.">
				<Param name="STRING filename" />
				<Param name="STRING offset" />
				<Param name="STRING length" />
				<Param name="STRING options" />
				<Param name="STRING format" />
			</Overload>
		</KeyWord>
		<KeyWord name="FILE_COUNT_LINE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Obtains the number of lines of a text file.
				
				[Description]
				Returns the number of lines, or -1 on error.
				
				Note:
				If live_dangerously in asterisk.conf is set to no, this function can only be executed from the dialplan, 
				and not directly from external protocols.
				
				[Asterisk Version]
				
				[Syntax]
				FILE_COUNT_LINE(filename,format)
				
				[Arguments]
				  &#x2022; filename
				  &#x2022; format - Format may be one of the following: 
				    &#x2022; u - Unix newline format.
				    &#x2022; d - DOS newline format.
				    &#x2022; m - Macintosh newline format.
				
				&#x20;&#x20; Note: If not specified, an attempt will be made to determine the newline format type.">
				<Param name="STRING filename" />
				<Param name="STRING format" />
			</Overload>
		</KeyWord>
		<KeyWord name="FILE_FORMAT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Return the newline format of a text file.
				
				[Description]
				Return the line terminator type:
				
				'u' - Unix &#x22;\n&#x22; format
				'd' - DOS &#x22;\r\n&#x22; format
				'm' - Macintosh &#x22;\r&#x22; format
				'x' - Cannot be determined
				
				Note:
				If live_dangerously in asterisk.conf is set to no, this function can only be executed from the dialplan, 
				and not directly from external protocols.
				
				[Asterisk Version]
				
				[Syntax]
				FILE_FORMAT(filename)
				
				[Arguments]
				  &#x2022; filename">
				<Param name="STRING filename" />
			</Overload>
		</KeyWord>
		<KeyWord name="FILTER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Filter the string to include only the allowed characters
				
				[Description]
				Permits all characters listed in allowed-chars, filtering all others outs. In addition to literally listing
				the characters, you may also use ranges of characters (delimited by a -
				
				Hexadecimal characters started with a \x(i.e. \x20)
				
				Octal characters started with a \0 (i.e. \040)
				
				Also \t,\n and \r are recognized.
				
				Note
				If you want the - character it needs to be prefixed with a {{}}
				
				FILTER(<allowed-chars>,<string>) - Asterisk 1.6 and later
				FILTER(<allowed-chars>|<string>) - Asterisk 1.4
				
				[Asterisk Version]
				(1.4+)
				
				[Syntax]
				FILTER(allowed-chars,string)
				
				[Example]
				exten => s,1,Set(foo=${FILTER(0-9,${cdrnum})}) - Asterisk 1.6 and later
				exten => s,1,Set(foo=${FILTER(0123456789|${cdrnum})}) - Asterisk 1.4
				
				[Arguments]
				  &#x2022; allowed-chars
				  &#x2022; string">
				<Param name="STRING allowed-chars" />
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="FRAME_TRACE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				View internal ast_frames as they are read and written on a channel.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				FRAME_TRACE(filter list type)
				
				[Example]
				exten => 1,1,Set(FRAME_TRACE(white)=DTMF_BEGIN,DTMF_END); view only DTMF frames.
				exten => 1,1,Set(FRAME_TRACE()=DTMF_BEGIN,DTMF_END); view only DTMF frames.
				exten => 1,1,Set(FRAME_TRACE(black)=DTMF_BEGIN,DTMF_END); view everything except DTMF frames.
				
				[Arguments]
				  &#x2022; filter list type - A filter can be applied to the trace to limit what frames are viewed. 
				    This filter can either be a white or black list of frame types. When no filter type is present, 
				    white is used. If no arguments are provided at all, all frames will be output.
				
				    Below are the different types of frames that can be filtered.
				      &#x2022; DTMF_BEGIN
				      &#x2022; DTMF_END
				      &#x2022; VOICE
				      &#x2022; VIDEO
				      &#x2022; CONTROL
				      &#x2022; NULL
				      &#x2022; IAX
				      &#x2022; TEXT
				      &#x2022; IMAGE
				      &#x2022; HTML
				      &#x2022; CNG
				      &#x2022; MODEM">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GLOBAL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets the global variable specified.
				
				[Description]
				Set or get the value of a global variable specified in varname
				
				[Asterisk Version]
				(1.4+)
				
				[Syntax]
				GLOBAL(varname)
				
				[Example]
				; define global variable ${myvariable}:
				exten => 123,1,Set(GLOBAL(myvariable)=Test)
				
				[Arguments]
				  &#x2022; varname - Global variable name">
				<Param name="STRING varname" />
			</Overload>
		</KeyWord>
		<KeyWord name="GROUP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets the channel group.
				
				[Description]
				category can be employed for more fine grained group management. Each channel can only be member of 
				exactly one group per category.
				
				[Asterisk Version]
				
				[Syntax]
				GROUP(category)
				
				[Arguments]
				  &#x2022; Category name.">
				<Param name="STRING category" />
			</Overload>
		</KeyWord>
		<KeyWord name="GROUP_COUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Counts the number of channels in the specified group.
				
				[Description]
				Calculates the group count for the specified group, or uses the channel's current group if not 
				specified (and non-empty).
				
				[Asterisk Version]
				
				[Syntax]
				GROUP_COUNT(groupname@category)
				
				[Arguments]
				  &#x2022; groupname - Group name.
				  &#x2022; category - Category name">
				<Param name="STRING groupname" />
				<Param name="STRING category" />
			</Overload>
		</KeyWord>
		<KeyWord name="GROUP_LIST" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets a list of the groups set on a channel.
				
				[Description]
				Gets a list of the groups set on a channel.
				
				[Asterisk Version]
				
				[Syntax]
				GROUP_LIST()
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GROUP_MATCH_COUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Counts the number of channels in the groups matching the specified pattern.
				
				[Description]
				Calculates the group count for all groups that match the specified pattern. Note: category matching is 
				applied after matching based on group. Uses standard regular expression matching on both (see regex(7)).
				
				[Asterisk Version]
				
				[Syntax]
				GROUP_MATCH_COUNT(groupmatch@category)
				
				[Arguments]
				  &#x2022; groupmatch - A standard regular expression used to match a group name.
				  &#x2022; category - A standard regular expression used to match a category name.">
				<Param name="STRING groupmatch" />
				<Param name="STRING category" />
			</Overload>
		</KeyWord>
		<KeyWord name="HANGUPCAUSE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets per-channel hangupcause information from the channel.
				
				[Description]
				Gets technology-specific or translated Asterisk cause code information from the channel for the specified 
				channel that resulted from a dial.
				
				[Asterisk Version]
				
				[Syntax]
				HANGUPCAUSE(channel,type)
				
				[Arguments]
				  &#x2022; channel - The name of the channel for which to retrieve cause information.
				  &#x2022; type - Parameter describing which type of information is requested. Types are:
				    &#x2022; tech - Technology-specific cause information
				    &#x2022; ast - Translated Asterisk cause code">
				<Param name="STRING channel" />
				<Param name="STRING type" />
			</Overload>
		</KeyWord>
		<KeyWord name="HANGUPCAUSE_KEYS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets the list of channels for which hangup causes are available.
				
				[Description]
				Returns a comma-separated list of channel names to be used with the HANGUPCAUSE function.
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="HASH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Implementation of a dialplan associative array
				
				[Description]
				In two arguments mode, gets and sets values to corresponding keys within a named associative array. 
				The single-argument mode will only work when assigned to from a function defined by func_odbc
				
				[Asterisk Version]
				
				[Syntax]
				HASH(hashname,hashkey)
				
				[Arguments]
				  &#x2022; hashname
				  &#x2022; hashkey">
				<Param name="STRING hashname" />
				<Param name="STRING hashkey" />
			</Overload>
		</KeyWord>
		<KeyWord name="HASHKEYS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve the keys of the HASH() function.
				
				[Description]
				Returns a comma-delimited list of the current keys of the associative array defined by the HASH() function.
				Note that if you iterate over the keys of the result, adding keys during iteration will cause the result 
				of the HASHKEYS() function to change.
				
				[Asterisk Version]
				
				[Syntax]
				HASHKEYS(hashname)
				
				[Arguments]
				  &#x2022; hashname">
				<Param name="STRING hashname" />
			</Overload>
		</KeyWord>
		<KeyWord name="HINT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get the devices set for a dialplan hint.
				
				[Description]
				The HINT function can be used to retrieve the list of devices that are mapped to a dialplan hint. 
				For example:
				
				NoOp(Hint for Extension 1234 is ${HINT(1234)})
				
				[Asterisk Version]
				(1.6+)
				 
				[Syntax]
				HINT(extension,options)
				
				[Arguments]
				  &#x2022; extension
				    &#x2022; extension
				    &#x2022; context
				  &#x2022; options
				    &#x2022; n - Retrieve name on the hint instead of list of devices.">
				<Param name="STRING extension" />
				<Param name="STRING options" />
			</Overload>
		</KeyWord>
		<KeyWord name="IAXPEER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets IAX peer information.
				
				[Description]
				Gets information associated with the specified IAX2 peer.
				
				[Asterisk Version]
				
				[Syntax]
				IAXPEER(peername,item)
				
				[Arguments]
				  &#x2022; peername
				    &#x2022; CURRENTCHANNEL - If peername is specified to this value, return the IP address of the endpoint 
				      of the current channel
				  &#x2022; item - If peername is specified, valid items are:
				    &#x2022; ip - (default) The IP address.
				    &#x2022; status - The peer's status (if qualify=yes)
				    &#x2022; mailbox - The configured mailbox.
				    &#x2022; context - The configured context.
				    &#x2022; expire - The epoch time of the next expire.
				    &#x2022; dynamic - Is it dynamic? (yes/no).
				    &#x2022; callerid_name - The configured Caller ID name.
				    &#x2022; callerid_num - The configured Caller ID number.
				    &#x2022; codecs - The configured codecs.
				    &#x2022; codecx - Preferred codec index number x (beginning with 0)">
				<Param name="STRING peername" />
				<Param name="STRING item" />
			</Overload>
		</KeyWord>
		<KeyWord name="IAXVAR" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Sets or retrieves a remote variable.
				
				[Description]
				Gets or sets a variable that is sent to a remote IAX2 peer during call setup.
				
				[Asterisk Version]
				
				[Syntax]
				IAXVAR(varname)
				
				[Arguments]
				  &#x2022; varname">
				<Param name="STRING varname" />
			</Overload>
		</KeyWord>
		<KeyWord name="ICONV" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Converts charsets of strings.
				
				[Description]
				Converts string from in-charset into out-charset. For available charsets, use iconv -l on your 
				shell command line.
				
				Note:
				Due to limitations within the API, ICONV will not currently work with charsets with embedded NULLs. 
				If found, the string will terminate.
				
				[Asterisk Version]
				
				[Syntax]
				ICONV(in-charset,out-charset,string)
				
				[Arguments]
				  &#x2022; in-charset - Input charset
				  &#x2022; out-charset - Output charset
				  &#x2022; string - String to convert, from in-charset to out-charset">
				<Param name="STRING in-charset" />
				<Param name="STRING out-charset" />
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="IF" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Check for an expresion.
				
				[Description]
				Returns the data following ? if true, else the data following :
				
				[Asterisk Version]
				
				[Syntax]
				IF(expresion?retvalue)
				
				[Arguments]
				  &#x2022; expresion
				  &#x2022; retvalue
				    &#x2022; true
				    &#x2022; false">
				<Param name="STRING expresion" />
			</Overload>
		</KeyWord>
		<KeyWord name="IFMODULE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Checks if an Asterisk module is loaded in memory.
				
				[Description]
				Checks if a module is loaded. Use the full module name as shown by the list in module list. 
				Returns 1 if module exists in memory, otherwise 0
				
				[Asterisk Version]
				
				[Syntax]
				IFMODULE(modulename.so)
				
				[Arguments]
				  &#x2022; modulename.so - Module name complete with .so">
				<Param name="STRING modulename" />
			</Overload>
		</KeyWord>
		<KeyWord name="IFTIME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Temporal Conditional.
				
				[Description]
				Returns the data following ? if true, else the data following :
				
				[Asterisk Version]
				
				[Syntax]
				IFTIME(timespec?retvalue)
				
				[Arguments]
				  &#x2022; timespec
				  &#x2022; retvalue
				    &#x2022; true
				    &#x2022; false">
				<Param name="STRING expresion" />
			</Overload>
		</KeyWord>
		<KeyWord name="IMPORT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve the value of a variable from another channel.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				IMPORT(channel,variable)
				
				[Arguments]
				  &#x2022; channel
				  &#x2022; variable">
				<Param name="STRING channel" />
				<Param name="STRING variable" />
			</Overload>
		</KeyWord>
		<KeyWord name="INC" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Increments the value of a variable, while returning the updated value to the dialplan
				
				[Description]
				Increments the value of a variable, while returning the updated value to the dialplan
				
				Example: INC(MyVAR) - Increments MyVar
				
				Note: INC(${MyVAR}) - Is wrong, as INC expects the variable name, not its value
				
				[Asterisk Version]
				
				[Syntax]
				INC(variable)
				
				[Arguments]
				  &#x2022; variable - The variable name to be manipulated, without the braces.">
				<Param name="STRING variable" />
			</Overload>
		</KeyWord>
		<KeyWord name="ISNULL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Check if a value is NULL.
				
				[Description]
				Returns 1 if NULL or 0 otherwise.
				
				[Asterisk Version]
				
				[Syntax]
				ISNULL(data)
				
				[Arguments]
				 &#x2022; data">
				<Param name="STRING data" />
			</Overload>
		</KeyWord>
		<KeyWord name="JABBER_RECEIVE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Reads XMPP messages.
				
				[Description]
				Receives a text message on the given account from the buddy identified by jid and returns the contents.
				
				Example: ${JABBER_RECEIVE(asterisk,bob@domain.com)} returns an XMPP message sent from bob@domain.com 
				(or nothing in case of a time out), to the asterisk XMPP account configured in xmpp.conf.
				
				[Asterisk Version]
				
				[Syntax]
				JABBER_RECEIVE(account,jid,timeout)
				
				[Arguments]
				  &#x2022; account - The local named account to listen on (specified in xmpp.conf)
				  &#x2022; jid - Jabber ID of the buddy to receive message from. It can be a bare JID (username@domain) 
				    or a full JID (username@domain/resource).
				  &#x2022; timeout - In seconds, defaults to 20.">
				<Param name="STRING account" />
				<Param name="STRING jid" />
				<Param name="STRING timeout" />
			</Overload>
		</KeyWord>
		<KeyWord name="JABBER_STATUS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieves a buddy's status.
				
				[Description]
				Retrieves the numeric status associated with the buddy identified by jid. If the buddy does not exist 
				in the buddylist, returns 7.
				
				Status will be 1-7.
				
				1=Online, 2=Chatty, 3=Away, 4=XAway, 5=DND, 6=Offline
				
				If not in roster variable will be set to 7.
				
				Example: ${JABBER_STATUS(asterisk,bob@domain.com)} returns 1 if bob@domain.com is online. asterisk is the 
				associated XMPP account configured in xmpp.conf.
				
				[Asterisk Version]
				
				[Syntax]
				JABBER_STATUS(account,jid)
				
				[Arguments]
				  &#x2022; account - The local named account to listen on (specified in xmpp.conf)
				  &#x2022; jid - Jabber ID of the buddy to receive message from. It can be a bare JID (username@domain) or a full 
				    JID (username@domain/resource).">
				<Param name="STRING account" />
				<Param name="STRING jid" />
			</Overload>
		</KeyWord>
		<KeyWord name="JACK_HOOK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JITTERBUFFER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Add a Jitterbuffer to the Read side of the channel. This dejitters the audio stream before it reaches 
				the Asterisk core. This is a write only function.
				
				[Description]
				Jitterbuffers are constructed in two different ways. The first always take three arguments: max_size, 
				resync_threshold, and target_extra. Alternatively, a single argument of default can be provided, which 
				will construct the default jitterbuffer for the given jitterbuffer type.
				
				The arguments are:
				
				max_size: Length in milliseconds of the buffer. Defaults to 200 ms.
				
				resync_threshold: The length in milliseconds over which a timestamp difference will result in resyncing 
				the jitterbuffer. Defaults to 1000ms.
				
				target_extra: This option only affects the adaptive jitterbuffer. It represents the amount time in 
				milliseconds by which the new jitter buffer will pad its size. Defaults to 40ms.
				
				[Asterisk Version]
				
				[Syntax]
				JITTERBUFFER(jitterbuffer type)
				
				[Example]
				; Fixed with defaults
				exten => 1,1,Set(JITTERBUFFER(fixed)=default)
				; Fixed with 200ms max size, resync threshold 1500
				exten => 1,1,Set(JITTERBUFFER(fixed)=200,1500)
				; Adaptive with defaults
				exten => 1,1,Set(JITTERBUFFER(adaptive)=default)
				; Adaptive with 200ms max size, 60ms target extra
				exten => 1,1,Set(JITTERBUFFER(adaptive)=200,,60)
				; Set a fixed jitterbuffer with defaults; then remove it
				exten => 1,1,Set(JITTERBUFFER(fixed)=default)
				exten => 1,n,Set(JITTERBUFFER(disabled)=)
				
				[Help]
				See: https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Function_JITTERBUFFER
				
				[Arguments]
				  &#x2022; jitterbuffer type
				    &#x2022; fixed - Set a fixed jitterbuffer on the channel.
				    &#x2022; adaptive - Set an adaptive jitterbuffer on the channel.
				    &#x2022; disabled - Remove a previously set jitterbuffer from the channel.">
				<Param name="STRING jitterbuffer" />
			</Overload>
		</KeyWord>
		<KeyWord name="KEYPADHASH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Hash the letters in string into equivalent keypad numbers.
				
				[Description]
				Example: ${KEYPADHASH(Les)} returns &#x22;537&#x22;
				
				[Asterisk Version]
				
				[Syntax]
				KEYPADHASH(string)
				
				[Arguments]
				  &#x2022; string">
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="LANGUAGE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets the channel language
				
				[Description]
				This function is deprecated in Asterisk 1.2 and removed in Asterisk 1.4.
				Use CHANNEL(language) instead.
				
				[Asterisk Version]
				
				[Syntax]
				Set(MYLANG=${LANGUAGE()}) - Asterisk 1.2
				Set(CHANNEL(language)=fr) - Asterisk 1.4
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="LEN" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Return the length of the string given.
				
				[Description]
				Example: ${LEN(example)} returns 7
				
				[Asterisk Version]
				
				[Syntax]
				LEN(string)
				
				[Arguments]
				  &#x2022; string">
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="LISTFILTER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Remove an item from a list, by name.
				
				[Description]
				Remove value from the list contained in the varname variable, where the list delimiter is specified by 
				the delim parameter. This is very useful for removing a single channel name from a list of channels, 
				for example. 
				
				[Asterisk Version]
				
				[Syntax]
				LISTFILTER(varname,delim,value)
				
				[Arguments]
				  &#x2022; varname
				  &#x2022; delim
				  &#x2022; value">
				<Param name="STRING varname" />
				<Param name="STRING delim" />
				<Param name="STRING value" />
			</Overload>
		</KeyWord>
		<KeyWord name="LOCAL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Manage variables local to the gosub stack frame.
				
				[Description]
				Read and write a variable local to the gosub stack frame, once we Return() it will be lost 
				(or it will go back to whatever value it had before the Gosub()).
				
				[Asterisk Version]
				
				[Syntax]
				LOCAL(varname)
				
				[Arguments]
				  &#x2022; varname">
				<Param name="STRING varname" />
			</Overload>
		</KeyWord>
		<KeyWord name="LOCAL_PEEK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve variables hidden by the local gosub stack frame.
				
				[Description]
				Read a variable varname hidden by n levels of gosub stack frames. Note that ${LOCAL_PEEK(0,foo)} is the 
				same as foo, since the value of n peeks under 0 levels of stack frames; in other words, 0 is the 
				current level. If n exceeds the available number of stack frames, then an empty string is returned.
				
				[Asterisk Version]
				
				[Syntax]
				LOCAL_PEEK(n,varname)
				
				[Arguments]
				  &#x2022; n
				  &#x2022; varname">
				<Param name="INTEGER n" />
				<Param name="STRING varname" />
			</Overload>
		</KeyWord>
		<KeyWord name="LOCK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Attempt to obtain a named mutex.
				
				[Description]
				Attempts to grab a named lock exclusively, and prevents other channels from obtaining the same lock. 
				LOCK will wait for the lock to become available. Returns 1 if the lock was obtained or 0 on error.
				
				Note:
				To avoid the possibility of a deadlock, LOCK will only attempt to obtain the lock for 3 seconds if 
				the channel already has another lock.
				
				Note:
				If live_dangerously in asterisk.conf is set to no, this function can only be executed from the 
				dialplan, and not directly from external protocols.
				
				[Asterisk Version]
				
				[Syntax]
				LOCK(lockname)
				
				[Arguments]
				  &#x2022; lockname">
				<Param name="STRING lockname" />
			</Overload>
		</KeyWord>
		<KeyWord name="MAILBOX_EXISTS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Tell if a mailbox is configured.
				
				[Description]
				Returns a boolean of whether the corresponding mailbox exists. If context is not specified, defaults 
				to the default context.
				
				Note:
				DEPRECATED. Use VM_INFO(mailbox[@context],exists) instead.
				
				[Asterisk Version]
				
				[Syntax]
				MAILBOX_EXISTS(mailbox@context)
				
				[Arguments]
				  &#x2022; n
				  &#x2022; varname">
				<Param name="STRING mailbox" />
				<Param name="STRING context" />
			</Overload>
		</KeyWord>
		<KeyWord name="MASTER_CHANNEL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets or sets variables on the master channel
				
				[Description]
				Allows access to the channel which created the current channel, if any. If the channel is already a 
				master channel, then accesses local channel variables.
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MATH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Performs Mathematical Functions.
				
				[Description]
				Performs mathematical functions based on two parameters and an operator. The returned value type is type
				Example: Set(i=${MATH(123%16,int)}) - sets var i=11
				
				[Asterisk Version]
				
				[Syntax]
				MATH(expression,type)
				
				[Arguments]
				  &#x2022; expression - Is of the form: number1opnumber2 where the possible values for op are:
				    +,-,/,*,%,<<,>>,^,AND,OR,XOR,<,>,<=,>=,== (and behave as their C equivalents)
				  &#x2022; type - Wanted type of result:
				    f, float - float(default)
				    i, int - integer
				    h, hex - hex
				    c, char - char">
				<Param name="STRING expression" />
				<Param name="STRING type" />
			</Overload>
		</KeyWord>
		<KeyWord name="MD5" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Computes an MD5 digest.
				
				[Description]
				Computes an MD5 digest.
				
				[Asterisk Version]
				
				[Syntax]
				MD5(data)
				
				[Arguments]
				  &#x2022; data">
				<Param name="STRING data" />
			</Overload>
		</KeyWord>
		<KeyWord name="MEETME_INFO" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Query a given conference of various properties.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				MEETME_INFO(keyword,confno)
				
				[Arguments]
				  &#x2022; keyword - Options:
				    &#x2022; lock - Boolean of whether the corresponding conference is locked.
				    &#x2022; parties - Number of parties in a given conference
				    &#x2022; activity - Duration of conference in seconds.
				    &#x2022; dynamic - Boolean of whether the corresponding conference is dynamic.
				  &#x2022; confno - Conference number to retrieve information from.">
				<Param name="STRING keyword" />
				<Param name="STRING confno" />
			</Overload>
		</KeyWord>
		<KeyWord name="MESSAGE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Create a message or read fields from a message.
				
				[Description]
				This function will read from or write a value to a text message. It is used both to read the data out of 
				an incoming message, as well as modify or create a message that will be sent outbound.
				
				[Asterisk Version]
				
				[Syntax]
				MESSAGE(argument)
				
				[Arguments]
				  &#x2022; argument - Field of the message to get or set.
				    &#x2022; to - Read-only. The destination of the message. When processing an incoming message, this will be set 
				      to the destination listed as the recipient of the message that was received by Asterisk.
				    &#x2022; from - Read-only. The source of the message. When processing an incoming message, this will be set 
				      to the source of the message.
				    &#x2022; custom_data - Write-only. Mark or unmark all message headers for an outgoing message. The following 
				      values can be set: 
				        &#x2022; mark_all_outbound - Mark all headers for an outgoing message.
				        &#x2022; clear_all_outbound - Unmark all headers for an outgoing message.
				    &#x2022; body - Read/Write.  The message body. When processing an incoming message, this includes the body of 
				      the message that Asterisk received. When MessageSend() is executed, the contents of this field are used 
				      as the body of the outgoing message. The body will always be UTF-8.">
				<Param name="STRING argument" />
			</Overload>
		</KeyWord>
		<KeyWord name="MESSAGE_DATA" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Read or write custom data attached to a message.
				
				[Description]
				This function will read from or write a value to a text message. It is used both to read the data out of 
				an incoming message, as well as modify a message that will be sent outbound.
				
				Note:
				If you want to set an outbound message to carry data in the current message, do 
				Set(MESSAGE_DATA( key)=${MESSAGE_DATA(key)}).
				
				
				[Asterisk Version]
				
				[Syntax]
				MESSAGE_DATA(argument)
				
				[Arguments]
				  &#x2022; argument - Field of the message to get or set.">
				<Param name="STRING argument" />
			</Overload>
		</KeyWord>
		<KeyWord name="MINIVMACCOUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets MiniVoicemail account information.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				MINIVMACCOUNT(account:item)
				
				[Arguments]
				  &#x2022; account
				  &#x2022; item - Valid items are: 
				    &#x2022; path - Path to account mailbox (if account exists, otherwise temporary mailbox).
				    &#x2022; hasaccount - 1 is static Minivm account exists, 0 otherwise.
				    &#x2022; fullname - Full name of account owner.
				    &#x2022; email - Email address used for account.
				    &#x2022; etemplate - Email template for account (default template if none is configured).
				    &#x2022; ptemplate - Pager template for account (default template if none is configured).
				    &#x2022; accountcode - Account code for the voicemail account.
				    &#x2022; pincode - Pin code for voicemail account.
				    &#x2022; timezone - Time zone for voicemail account.
				    &#x2022; language - Language for voicemail account.
				    &#x2022; <channel variable name> - Channel variable value (set in configuration for account).">
				<Param name="STRING account" />
				<Param name="STRING item" />
			</Overload>
		</KeyWord>
		<KeyWord name="MINIVMCOUNTER" func="yes">
				<Overload retVal="Function" descr="
				[Synopsis]
				Reads or sets counters for MiniVoicemail message.
				
				[Description]
				The operation is atomic and the counter is locked while changing the value. The counters are stored as 
				text files in the minivm account directories. It might be better to use realtime functions if you are 
				using a database to operate your Asterisk.
				
				[Asterisk Version]
				
				[Syntax]
				MINIVMCOUNTER(account:name:operand)
				
				[Arguments]
				  &#x2022; account - If account is given and it exists, the counter is specific for the account.
				    If account is a domain and the domain directory exists, counters are specific for a domain.
				  &#x2022; name - The name of the counter is a string, up to 10 characters.
				  &#x2022; operand - The counters never goes below zero. Valid operands for changing the value of a counter when 
				    assigning a value are: 
				      &#x2022; i - Increment by value.
				      &#x2022; d - Decrement by value.
				      &#x2022; s - Set to value.">
				<Param name="STRING arguments" />
			</Overload>
		</KeyWord>
		<KeyWord name="MIXMONITOR" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Retrieve data pertaining to specific instances of MixMonitor on a channel.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				MIXMONITOR(id,key)
				
				[Arguments]
				  &#x2022; id - The unique ID of the MixMonitor instance. The unique ID can be retrieved through the channel variable 
				    &#x2022; used as an argument to the i option to MixMonitor.
				  &#x2022; key - The piece of data to retrieve from the MixMonitor. ">
				<Param name="STRING id" />
				<Param name="STRING key" />
			</Overload>
		</KeyWord>
		<KeyWord name="MUSICCLASS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Read or Set the MusicOnHold class
				
				[Description]
				This function will read or set the music on hold class for a channel.
				
				Deprecated. Use CHANNEL function instead
				
				
				[Asterisk Version]
				Removed in Asterisk 1.6
				
				[Syntax]
				MUSICCLASS()
				
				[Example]
				exten => s,1,Set(foo=${MUSICCLASS()})
				exten => s,1,Set(MUSICCLASS()=Marimba)
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MUTEAUDIO" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Muting audio streams in the channel
				
				[Description]
				The MUTEAUDIO function can be used to mute inbound (to the PBX) or outbound audio in a call.
				
				[Asterisk Version]
				
				[Syntax]
				MUTEAUDIO(direction)
				
				[Example]
				MUTEAUDIO(in)=on
				MUTEAUDIO(in)=off
				
				[Arguments]
				  &#x2022; direction - Must be one of 
				    &#x2022; in - Inbound stream (to the PBX)
				    &#x2022; out - Outbound stream (from the PBX)
				    &#x2022; all - Both streams">
				<Param name="STRING direction" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Controls ODBC transaction properties.
				
				[Description]
				The ODBC() function allows setting several properties to influence how a connected database processes transactions.
				
				[Asterisk Version]
				
				[Syntax]
				ODBC(property[,argument])
				
				[Arguments]
				  &#x2022; property
				    &#x2022; transaction - Gets or sets the active transaction ID. If set, and the transaction ID does not exist 
				      and a database name is specified as an argument, it will be created.
				    &#x2022; forcecommit - Controls whether a transaction will be automatically committed when the channel hangs up. 
				      Defaults to false. If a transaction ID is specified in the optional argument, the property will be applied to 
				      that ID, otherwise to the current active ID.
				  &#x2022; argument">
				<Param name="STRING property" />
				<Param name="[STRING argument]" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC_ANIBLOCK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC_FETCH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Fetch a row from a multirow query.
				
				[Description]
				For queries which are marked as mode=multirow, the original query returns a result-id from which results 
				may be fetched. This function implements the actual fetch of the results.
				
				This also sets ODBC_FETCH_STATUS.
				
				  &#x2022; ODBC_FETCH_STATUS
				    &#x2022; SUCESS - If rows are available.
				    &#x2022; FAILURE - If no rows are available.
				
				[Asterisk Version]
				
				[Syntax]
				ODBC_FETCH(result-id)
				
				[Arguments]
				  &#x2022; result-id">
				<Param name="STRING result-id" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC_SQL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC_USER_DATABASE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PASSTHRU" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Pass the given argument back as a value.
				
				[Description]
				Literally returns the given string. The intent is to permit other dialplan functions which take a variable 
				name as an argument to be able to take a literal string, instead.
				
				NOte:
				The functions which take a variable name need to be passed var and not ${var}. Similarly, 
				use PASSTHRU() and not ${PASSTHRU()}.
				
				Example: ${CHANNEL} contains SIP/321-1
				${CUT(PASSTHRU(${CUT(CHANNEL,-,1)}),/,2)}) will return 321
				
				[Asterisk Version]
				
				[Syntax]
				PASSTHRU([string])
				
				[Arguments]
				  &#x2022; string">
				<Param name="STRING string" />
			</Overload>
		</KeyWord>
		<KeyWord name="PERIODIC_HOOK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Execute a periodic dialplan hook into the audio of a call.
				
				[Description]
				For example, you could use this function to enable playing a periodic beep sound in a call.
				
				To turn on:
				Set(BEEPID=${PERIODIC_HOOK(hooks,beep,180)})
				
				To turn off:
				Set(PERIODIC_HOOK(${BEEPID})=off)
				
				To turn back on again later:
				Set(PERIODIC_HOOK(${BEEPID})=on)
				
				It is important to note that the hook does not actually run on the channel itself. It runs asynchronously 
				on a new channel. Any audio generated by the hook gets injected into the call for the channel 
				PERIODIC_HOOK() was set on.
				
				[Asterisk Version]
				
				[Syntax]
				PERIODIC_HOOK(context,extension,interval,hook_id)
				
				[Arguments]
				  &#x2022; context - (On Read Only) Context for the hook extension.
				  &#x2022; extension - (On Read Only) The hook extension.
				  &#x2022; interval - (On Read Only) Number of seconds in between hook runs. Whole seconds only.
				  &#x2022; hook_id - (On Write Only) The hook ID.">
				<Param name="STRING context" />
				<Param name="STRING extension" />
				<Param name="STRING interval" />
				<Param name="STRING hook_id" />
			</Overload>
		</KeyWord>
		<KeyWord name="PITCH_SHIFT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Pitch shift both tx and rx audio streams on a channel.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				PITCH_SHIFT(channel direction)
				
				[Example]
				exten => 1,1,Set(PITCH_SHIFT(tx)=highest); raises pitch an octave
				exten => 1,1,Set(PITCH_SHIFT(rx)=higher) ; raises pitch more
				exten => 1,1,Set(PITCH_SHIFT(both)=high) ; raises pitch
				exten => 1,1,Set(PITCH_SHIFT(rx)=low) ; lowers pitch
				exten => 1,1,Set(PITCH_SHIFT(tx)=lower) ; lowers pitch more
				exten => 1,1,Set(PITCH_SHIFT(both)=lowest) ; lowers pitch an octave
				exten => 1,1,Set(PITCH_SHIFT(rx)=0.8) ; lowers pitch
				exten => 1,1,Set(PITCH_SHIFT(tx)=1.5) ; raises pitch
				
				[Arguments]
				  &#x2022; channel direction - Direction can be either rx, tx, or both. The direction can either be set to a valid 
				    floating point number between 0.1 and 4.0 or one of the enum values listed below. A value of 1.0 has 
				    no effect. Greater than 1 raises the pitch. Lower than 1 lowers the pitch.
				
				    The pitch amount can also be set by the following values
				      &#x2022; highest
				      &#x2022; higher
				      &#x2022; high
				      &#x2022; low
				      &#x2022; lower
				      &#x2022; lowest">
				<Param name="STRING channel direction" />
			</Overload>
		</KeyWord>
		<KeyWord name="PJSIP_AOR" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get information about a PJSIP AOR
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				PJSIP_AOR(name,field)
				
				[Arguments]
				  &#x2022; name - The name of the AOR to query.
				  &#x2022; field - The configuration option for the AOR to query for. Supported options are those fields on 
				    the aor object in pjsip.conf.
				    &#x2022; contact - Permanent contacts assigned to AoR
				    &#x2022; default_expiration - Default expiration time in seconds for contacts that are dynamically 
				      bound to an AoR.
				    &#x2022; mailboxes - Allow subscriptions for the specified mailbox(es)
				    &#x2022; maximum_expiration - Maximum time to keep an AoR
				    &#x2022; max_contacts - Maximum number of contacts that can bind to an AoR
				    &#x2022; minimum_expiration - Minimum keep alive time for an AoR
				    &#x2022; remove_existing - Determines whether new contacts replace existing ones.
				    &#x2022; type - Must be of type 'aor'.
				    &#x2022; qualify_frequency - Interval at which to qualify an AoR
				    &#x2022; authenticate_qualify - Authenticates a qualify request if needed
				    &#x2022; outbound_proxy - Outbound proxy used when sending OPTIONS request
				    &#x2022; support_path - Enables Path support for REGISTER requests and Route support for other requests.">
				<Param name="STRING name" />
				<Param name="STRING field" />
			</Overload>
		</KeyWord>
		<KeyWord name="PJSIP_CONTACT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get information about a PJSIP contact
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				PJSIP_CONTACT(name,field)
				
				[Arguments]
				  &#x2022; name - The name of the contact to query.
				  &#x2022; field - The configuration option for the contact to query for. Supported options are those fields on the contact object.
				    &#x2022; type - Must be of type 'contact'.
				    &#x2022; uri - SIP URI to contact peer
				    &#x2022; expiration_time - Time to keep alive a contact
				    &#x2022; qualify_frequency - Interval at which to qualify a contact
				    &#x2022; outbound_proxy - Outbound proxy used when sending OPTIONS request
				    &#x2022; path - Stored Path vector for use in Route headers on outgoing requests.
				    &#x2022; user_agent - User-Agent header from registration.">
				<Param name="STRING name" />
				<Param name="STRING field" />
			</Overload>
		</KeyWord>
		<KeyWord name="PJSIP_DIAL_CONTACTS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Return a dial string for dialing all contacts on an AOR.
				
				[Description]
				Returns a properly formatted dial string for dialing all contacts on an AOR.
				
				[Asterisk Version]
				
				[Syntax]
				PJSIP_DIAL_CONTACTS(endpoint[,aor[,request_user]])
				
				[Arguments]
				  &#x2022; endpoint - Name of the endpoint
				  &#x2022; aor - Name of an AOR to use, if not specified the configured AORs on the endpoint are used
				  &#x2022; request_user - Optional request user to use in the request URI">
				<Param name="STRING endpoint" />
				<Param name="[STRING aor" />
				<Param name="[STRING request_user]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="PJSIP_ENDPOINT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Get information about a PJSIP endpoint
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				PJSIP_ENDPOINT(name,field)
				
				[Help]
				See: https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Function_PJSIP_ENDPOINT
				
				[Arguments]
				  &#x2022; name - The name of the endpoint to query.
				  &#x2022; field - The configuration option for the endpoint to query for. Supported options are those fields on the 
				    endpoint object in pjsip.conf.
				      &#x2022; 100rel
				      &#x2022; aggregate_mwi
				      &#x2022; allow
				      &#x2022; aors
				      &#x2022; auth
				      &#x2022; callerid
				      &#x2022; callerid_privacy
				      &#x2022; callerid_tag
				      &#x2022; context
				      &#x2022; direct_media_glare_mitigation
				      &#x2022; direct_media_method
				      &#x2022; connected_line_method
				      &#x2022; direct_media
				      &#x2022; disable_direct_media_on_nat
				      &#x2022; disallow
				      &#x2022; dtmf_mode
				      &#x2022; media_address
				      &#x2022; force_rport
				      &#x2022; ice_support
				      &#x2022; identify_by
				      &#x2022; redirect_method
				      &#x2022; mailboxes
				      &#x2022; moh_suggest
				      &#x2022; outbound_auth
				      &#x2022; outbound_proxy
				      &#x2022; rewrite_contact
				      &#x2022; rtp_ipv6
				
				      More fields...
				
				    See Help for full list of fields.">
				<Param name="STRING name" />
				<Param name="STRING field" />
			</Overload>
		</KeyWord>
		<KeyWord name="PJSIP_HEADER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				Gets, adds, updates or removes the specified SIP header from a PJSIP session.
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				PJSIP_HEADER(action,name[,number])
				
				[Example]
				; Set 'somevar' to the value of the 'From' header.
				exten => 1,1,Set(somevar=${PJSIP_HEADER(read,From)})
				
				; Set 'via2' to the value of the 2nd 'Via' header.
				exten => 1,1,Set(via2=${PJSIP_HEADER(read,Via,2)})
				
				; Add an 'X-Myheader' header with the value of 'myvalue'.
				exten => 1,1,Set(PJSIP_HEADER(add,X-MyHeader)=myvalue)
				
				; Update the value of the header named 'X-Myheader' to 'newvalue'.
				; 'X-Myheader' must already exist or the call will fail.
				exten => 1,1,Set(PJSIP_HEADER(update,X-MyHeader)=newvalue)
				
				; Remove all headers that begin with 'X-My'.
				exten => 1,1,Set(PJSIP_HEADER(remove,X-My*)=)
				
				[Help]
				https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Function_PJSIP_HEADER
				
				[Arguments]
				  &#x2022; action
				    &#x2022; read - Returns instance number of header name.
				    &#x2022; add - Adds a new header name to this session.
				    &#x2022; update - Updates instance number of header name to a new value. The header must already exist.
				    &#x2022; remove - Removes all instances of previously added headers whose names match name. A {} may be 
				      appended to name to remove all headers *beginning with name. name may be set to a single {} to clear *all 
				      previously added headers. In all cases, the number of headers actually removed is returned.
				  &#x2022; name - The name of the header.
				  &#x2022; number - If there's more than 1 header with the same name, this 
				    specifies which header to read or update. If not specified, defaults to 1 meaning 
				    the first matching header. Not valid for add or remove.">
				<Param name="STRING action" />
				<Param name="[STRING name" />
				<Param name="[STRING number]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="PJSIP_MEDIA_OFFER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="POP" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PP_EACH_EXTENSION" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PP_EACH_USER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PRESENCE_STATE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PUSH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUEAGENTCOUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_EXISTS" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_MEMBER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_MEMBER_COUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_MEMBER_LIST" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_MEMBER_PENALTY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_VARIABLES" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUEUE_WAITING_COUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QUOTE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RAND" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REALTIME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REALTIME_DESTROY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REALTIME_FIELD" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REALTIME_HASH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REALTIME_STORE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REDIRECTING" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REGEX" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="REPLACE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SCCPCHANNEL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SCCPDEVICE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SCCPLINE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SET" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SHA1" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SHARED" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SHELL" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SHIFT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPCHANINFO" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPPEER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIP_HEADER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SMDI_MSG" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SMDI_MSG_RETRIEVE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SORT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPEECH" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPEECH_ENGINE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPEECH_GRAMMAR" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPEECH_RESULTS_TYPE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPEECH_SCORE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPEECH_TEXT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SPRINTF" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SQL_ESC" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SRVQUERY" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SRVRESULT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="STACK_PEEK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="STAT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="STRFTIME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="STRPTIME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="STRREPLACE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SYSINFO" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TALK_DETECT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TESTTIME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TIMEOUT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TOLOWER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TOUPPER" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TRYLOCK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TXTCIDNAME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="UNLOCK" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="UNSHIFT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="URIDECODE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="URIENCODE" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VALID_EXTEN" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VERSION" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VMCOUNT" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VM_INFO" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VOLUME" func="yes">
			<Overload retVal="Function" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<!-- DIALPLAN APPLICATIONS -->
		<KeyWord name="ADSIProg" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				(1.0+)
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AELSub" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				(1.4+)
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AGI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				(1.0+)
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ALSAMonitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				Allows the user to monitor the ALSA console bi directionally. Monitoring is performed regardless of the state of any call that might be on the channel.
				
				[Asterisk Version]
				
				[Syntax]
				ALSAMonitor(password)
				
				[Help]
				See: ftp://ftp.digium.com/pub/asterisk/misc/alsa-monitor.h
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AMD" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AbsoluteTimeout" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use TIMEOUT function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AddQueueMember" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Dynamically adds queue members
				
				[Description]
				Dynamically adds interface to an existing queue. If the interface is already in the queue it will return an error.
				
				This application sets the following channel variable upon completion:
				 &#x2022; AQMSTATUS - The status of the attempt to add a queue member as a text string.
					   &#x2022; ADDED
					   &#x2022; MEMBERALREADY
					   &#x2022; NOSUCHQUEUE
				
				[Asterisk Version]
				(1.0+)
				
				[Syntax]
				AddQueueMember(queuename,[interface,[penalty,[options,[membername,[stateinterface]]]]])
				
				[Usage]		
				AddQueueMember(queuename[|interface[|penalty]]): - Asterisk 1.0
				AddQueueMember(queuename[|interface[|penalty[|options]]]): - Asterisk 1.2
				AddQueueMember(queuename[|interface[|penalty[|options[|membername]]]]): - Asterisk 1.4
				AddQueueMember(queuename[,interface[,penalty[,options[,membername[,stateinterface]]]]])): - Asterisk 1.6+
				
				[Arguments]
				 &#x2022; queuename
				 &#x2022; interface
				 &#x2022; penalty
				 &#x2022; options
				 &#x2022; membername
				 &#x2022; stateinterface">
				<Param name="STRING queuename" />
				<Param name="[STRING interface" />
				<Param name="[STRING penalty" />
				<Param name="[STRING options" />
				<Param name="[STRING membername" />
				<Param name="[STRING stateinterface ]]]]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="AgentCallBackLogin" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Call agent callback login
				
				[Description]
				Asks the agent to login to the system with callback.
				The agent's callback extension is called with the specified context. The context must be specified, 
				however the system will prompt for the Agent number, password, and extension if they have not been supplied.
				
				[Asterisk Version]
				Deprecated in 1.4
				Removed in 1.6
				
				[Syntax]
				AgentCallbackLogin([AgentNo][|exten]@context) - Asterisk 1.0
				AgentCallbackLogin([AgentNo][|Options[|exten[@context]]]) - Asterisk 1.2+
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AgentLogin" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				(1.0+)
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AgentMonitorOutgoing" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				(1.0+)
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AgentRequest" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AlarmReceiver" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Answer" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AppendCDRUserField" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Authenticate" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Autoanswer" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="AutoanswerLogin" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="BackGround" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="BackgroundDetect" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Bridge" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="BridgeWait" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Busy" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CELGenUserEvent" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CallCompletionCancel" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CallCompletionRequest" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CallingPres" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ChanIsAvail" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ChanSpy" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ChangeMonitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ChannelRedirect" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="CheckGroup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ClearHash" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ConfBridge" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Congestion" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ContinueWhile" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ControlPlayback" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Curl" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use CURL function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Cut" func="yes">
			<Overload retVal="" descr="
				Deprecated. Use CUT function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DAHDIAcceptR2Call" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DAHDIBarge" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DAHDIRAS" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DAHDIScan" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DAHDISendCallreroutingFacility" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DAHDISendKeypadFacility" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DBQuery" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DBRewrite" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DBdel" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DBdeltree" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DBget" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DBput" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DISA" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DTMFToText" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DUNDiLookup" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use DUNDILOOKUP function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DateTime" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DeadAGI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Dial" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Attempt to connect to another device or endpoint and bridge the call.
				
				[Description]
				This application will place calls to one or more specified channels.
				As soon as one of the requested channels answers, the originating channel 
				will be answered, if it has not already been answered. These two channels 
				will then be active in a bridged call. All other channels that were 
				requested will then be hung up.
				
				[Asterisk Version]
				(1.0+)
				
				[Syntax]
				Dial(Technology/Resource&#x26;[Technology2/Resource2[&#x26;...]],[timeout,[options,[URL]]])
				
				[Example]
				exten => _NXXXXXX,5,Dial(DAHDI/g0/${EXTEN},30)
				exten => _3XXXXXXXXX,5,Dial(SIP/${EXTEN},30)
				
				[Arguments]
				 &#x2022; Technology/Resource
				 &#x2022; timeout
				 &#x2022; options (A,a,B,b,C,c,D,d,e,F,f,g,G,H,h,I,i,K,k,L,M,m,N,n,O,o,P,p,R,r,S,s,T,t,U,u,W,w,X,x,z)
				 &#x2022; URL">
				<Param name="STRING Technology/Resource" />
				<Param name="[INTEGER timeout" />
				<Param name="[STRING options" />
				<Param name="[STRING URL]]]" />
			</Overload>
		</KeyWord>
		<KeyWord name="Dictate" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DigitTimeout" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Directory" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DumpChan" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="DynExtenDB" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="EAGI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Echo" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="EndWhile" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="EnumLookup" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use ENUMLOOKUP function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Eval" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use EVAL function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Exec" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ExecIf" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ExecIfTime" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ExitWhile" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ExtenSpy" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ExternIVR" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ExternalIVR" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="FastAGI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Festival" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Flash" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Flite" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				This provides the 'Flite' dialplan application, which allows you to use
				the Flite TTS Engine with Asterisk.
				
				[Description]
				This module invokes the Flite TTS engine locally, and uses it to render 
				text to speech.
				
				[Asterisk Version]
				(1.6+)
				
				[Syntax]
				Flite(text[,intkeys])
				
				[Example]
				; Flite Demo
				exten => 1234,1,Answer()
				exten => 1234,n,Flite(&#x0022;This is a simple F lite test in english.&#x0022;,any)
				;Read a text file from disk and pass it to flite
				exten => 1234,n,ReadFile(MYTEXT=/path/myfile,200)
				exten => 1234,n,Flite(&#x0022;${MYTEXT}&#x0022;,any)
				exten => 1234,n,Hangup()
				
				[Arguments]
				 &#x2022; text
				 &#x2022; intkeys">
				<Param name="STRING text"/>
				<Param name="STRING intkeys"/>
			</Overload>
		</KeyWord>
		<KeyWord name="FollowMe" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ForkCDR" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GetCPEID" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GetGroupCount" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GetGroupMatchCount" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Gosub" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GosubIf" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Goto" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GotoIf" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="GotoIfTime" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Hangup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="HangupCauseClear" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="HasNewVoicemail" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="HasVoicemail" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="HoldedCall" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="IAX2Provision" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ICES" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="IVRDemo" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Iconv" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use ICONV function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ImportVar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Incomplete" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JACK" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JabberJoin" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JabberLeave" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JabberSend" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JabberSendGroup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="JabberStatus" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="KeepAlive" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="LDAPget" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Log" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="LookupBlacklist" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="LookupCIDName" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MD5Check" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use CHECK_MD5 function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MP3Player" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MSet" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MWI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MYSQL" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Basic MYSQL Database Functionality
				
				[Description]
				MYSQL(): Basic MYSQL Database Functionality
				This is an ADD-ON of asterisk, is not installed by default and must be downloaded
				
				[Asterisk Version]
				
				[Syntax]
				MYSQL(Connect connid dhhost dbuser dbpass dbname)
				MYSQL(Query resultid ${connid} query-string)
				MYSQL(Fetch fetchid ${resultid} var1\ var2\ ...\ varN)
				MYSQL(Nextresult resultid ${connid}) (New in Asterisk 1.8)
				MYSQL(Clear ${resultid})
				MYSQL(Disconnect ${connid})
				
				[Example]
				exten => _X.,1,MYSQL(Connect connid localhost dbuser dbpass dbname)
				exten => _X.,2,MYSQL(Query resultid ${connid} SELECT\ scriptname\ from\ mac2pin\ where\ userid=${CALLERIDNAME})
				exten => _X.,3,MYSQL(Fetch fetchid ${resultid} AGIScript)
				exten => _X.,4,GotoIf($[${AGIScript} = NULL]?5:7)
				exten => _X.,5,AGI(${DefaultAGIScript},${EXTEN})
				exten => _X.,6,Goto(_X.,8)
				exten => _X.,7,AGI(${AGIScript},${EXTEN})
				exten => _X.,8,MYSQL(Clear ${resultid})
				exten => _X.,9,MYSQL(Disconnect ${connid})
				exten => _X.,10,Hangup">
				<Param name="COMMAND params" />
			</Overload>
		</KeyWord>
		<KeyWord name="Macro" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MacroExclusive" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MacroExit" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MacroIf" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MailboxExists" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use MAILBOX_EXISTS function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Math" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use MATH function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MeetMe" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MeetMeAdmin" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MeetMeChannelAdmin" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MeetMeCount" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MessageSend" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Milliwatt" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MiniVM" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MinivmAccMess" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MinivmDelete" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MinivmGreet" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MinivmMWI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MinivmNotify" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MinivmRecord" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MixMonitor" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use MIXMONITOR function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Monitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Morsecode" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="MusicOnHold" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="NBScat" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="NoCDR" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="NoOp" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBCFinish" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC_Commit" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ODBC_Rollback" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="OSPAuth" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="OSPFinish" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="OSPLookup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="OSPNext" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Originate" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PHP" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PPPD" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Page" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Park" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ParkAndAnnounce" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ParkedCall" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PauseMonitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PauseQueueMember" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Perl" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PickDown" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Pickup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PickupChan" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PlayTones" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Playback" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Prefix" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Prepaid" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="PrivacyManager" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Proceeding" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Progress" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Queue" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="QueueLog" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RaiseException" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Random" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Read" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ReadExten" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ReadFile" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RealTime" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use REALTIME function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RealTimeUpdate" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ReceiveFAX" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Record" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RemoveQueueMember" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ResetCDR" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ResponseTimeout" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RetryDial" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Return" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Ringing" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Rpt" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="RxFAX" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SCCPSetCalledParty" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use Set(CHANNEL(calledparty)=&#x0022;name &#x003C;exten&#x003E;&#x0022;) function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SCCPSetCodec" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use Set(CHANNEL(codec)=&#x0025;s) function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SCCPSetMessage" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Send a Message to the current Phone
				
				[Description]
				Send a Message to the Calling Device (and remove after timeout, if timeout 
				is ommited will stay until next/empty message). Use priority to set/clear 
				priority notifications. Higher priority levels overrule lower ones.
				
				[Asterisk Version]
				
				[Syntax]
				SCCPSetMessage(message text [,timeout])
				
				[Arguments]
				 &#x2022; message
				 &#x2022; timeout">
				<Param name="STRING message" />
				<Param name="[INTEGER timeout]" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPAddHeader" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				(1.4+)
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPCallPickup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPDtmfMode" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Change the dtmfmode for a SIP call
				
				[Description]
				Changes the dtmfmode for a SIP call, i.e. calls originating in a SIP channel,
				not calls TO a SIP channel originating in another type of channel, like a ZAP channel.
				
				[Asterisk Version]
				
				[Syntax]
				SIPDtmfMode(mode)
				
				[Example]
				SIPDtmfMode(inband)
				
				[Arguments]
				 &#x2022; mode
				   &#x2022; inband
				   &#x2022; info
				   &#x2022; rfc2833">
				<Param name="STRING mode" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPGetHeader" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPRemoveHeader" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SIPSendCustomINFO" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SLAStation" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SLATrunk" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SMS" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayAlpha" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayAlphaCase" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayCountPL" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayCountedAdj" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayCountedNoun" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayDigits" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayNumber" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayPhonetic" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SayUnixTime" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SendDTMF" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SendFAX" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SendImage" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SendText" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SendURL" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Set" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetAMAFlags" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetAccount" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetCDRUserField" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetCIDName" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetCIDNum" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetCalledParty" func="yes">
			<Overload retVal="Application" descr="
				Deprecated in favor of SCCPSetCalledParty">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetCallerID" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetCallerPres" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetGlobalVar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetGroup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetLanguage" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetMessage" func="yes">
			<Overload retVal="Application" descr="
				Deprecated in favor of SCCPSetMessage">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetMusicOnHold" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetRDNIS" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetSCCPCodec" func="yes">
			<Overload retVal="Application" descr="
				Deprecated in favor of SCCPSetCodec">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetTransferCapability" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SetVar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Skel" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SkelGuessNumber" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SoftHangup" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Sort" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use SORT function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechActivateGrammar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechBackground" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechCreate" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechDeactivateGrammar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechDestroy" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechLoadGrammar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechProcessingSound" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechStart" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SpeechUnloadGrammar" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SrxDeflect" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SrxEchoCan" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SrxMWI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StackPop" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StartMusicOnHold" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Stasis" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Steal" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StopMixMonitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StopMonitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StopMusicOnHold" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StopPlayTones" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StripLSD" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="StripMSD" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="SubString" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Suffix" func="yes">
			<Overload retVal="Application" descr="
				Obsolete. Has been Removed">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Swift" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="System" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TXTCIDName" func="yes">
			<Overload retVal="Application" descr="
				Deprecated. Use TXTCIDNAME function instead">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TestClient" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TestServer" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Transfer" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TryExec" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="TrySystem" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="UnpauseMonitor" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="UnpauseQueueMember" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="UserEvent" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VMAuthenticate" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VMSayName" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Verbose" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VoiceMail" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="VoiceMailMain" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				Check Voicemail messages
				
				[Description]
				This application allows the calling party to check voicemail messages. A specific mailbox, 
				and optional corresponding context, may be specified. If a mailbox is not provided, 
				the calling party will be prompted to enter one. If a context is not specified, the default 
				context will be used.
				
				The VoiceMailMain application will exit if the following DTMF digit is entered as Mailbox 
				or Password, and the extension exists:
				
				 &#x2022; * - Jump to the a extension in the current dialplan context.
				
				[Asterisk Version]
				
				[Syntax]
				VoiceMailMain([mailbox@[context]],[options])
				
				[Arguments]
				 &#x2022; mailbox
				   &#x2022; mailbox
				   &#x2022; context
				 &#x2022; options
				   &#x2022; p - Consider the mailbox parameter as a prefix to the mailbox that is entered by the caller.
				   &#x2022; g - Use the specified amount of gain when recording a voicemail message. The units are 
				&#x20;&#x20;&#x20;&#x20; whole-number decibels (dB). 
				     &#x2022; #
				   &#x2022; s - Skip checking the passcode for the mailbox.
				   &#x2022; a - Skip folder prompt and go directly to folder specified. Defaults to INBOX (or 0).
				     &#x2022; folder
				     &#x2022; 0 - INBOX
				     &#x2022; 1 - Old
				     &#x2022; 2 - Work
				     &#x2022; 3 - Family
				     &#x2022; 4 - Friends
				     &#x2022; 5 - Cust1
				     &#x2022; 6 - Cust2
				     &#x2022; 7 - Cust3
				     &#x2022; 8 - Cust4
				     &#x2022; 9 - Cust5">
				<Param name="STRING mailbox@context" />
				<Param name="[STRING options]" />
			</Overload>
		</KeyWord>
		<KeyWord name="VoiceMailPlayMsg" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Wait" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="WaitExten" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="WaitForNoise" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="WaitForRing" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="WaitForSilence" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="WaitMusicOnHold" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="WaitUntil" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="While" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="XAGI" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ZapBarge" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ZapEC" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ZapRAS" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="ZapScan" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="Zapateller" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<KeyWord name="capiCommand" func="yes">
			<Overload retVal="Application" descr="
				[Synopsis]
				
				[Description]
				
				[Asterisk Version]
				
				[Syntax]
				
				[Arguments]">
				<Param name="" />
			</Overload>
		</KeyWord>
		<!-- SYSTEM VARIABLES -->
		<KeyWord name="ACCOUNTCODE" />
		<KeyWord name="AGENTACCEPTDTMF" />
		<KeyWord name="AGENTACKCALL" />
		<KeyWord name="AGENTAUTOLOGOFF" />
		<KeyWord name="AGENTEXTEN" />
		<KeyWord name="AGENTGOODBYE" />
		<KeyWord name="AGENTMAXLOGINTRIES" />
		<KeyWord name="AGENTNUMBER" />
		<KeyWord name="AGENTSTATUS" />
		<KeyWord name="AGENTUPDATECDR" />
		<KeyWord name="AGENTWRAPUPTIME" />
		<KeyWord name="AGENT_STATUS" />
		<KeyWord name="AGIEXITONHANGUP" />
		<KeyWord name="AGISTATUS" />
		<KeyWord name="ALARMRECEIVER_CALL_LIMIT" />
		<KeyWord name="ALARMRECEIVER_RETRIES_LIMIT" />
		<KeyWord name="ALERT_INFO" />
		<KeyWord name="AMDCAUSE" />
		<KeyWord name="AMDSTATUS" />
		<KeyWord name="ANI2" />
		<KeyWord name="ANSWEREDTIME" />
		<KeyWord name="AQMSTATUS" />
		<KeyWord name="ARG1" />
		<KeyWord name="ARG2" />
		<KeyWord name="ARG3" />
		<KeyWord name="ARG4" />
		<KeyWord name="ARG5" />
		<KeyWord name="ASTERISKETCDIR" />
		<KeyWord name="ASTERISKINCDIR" />
		<KeyWord name="ASTERISKMODDIR" />
		<KeyWord name="ATTENDED_TRANSFER_COMPLETE_SOUND" />
		<KeyWord name="AUTH_CONTEXT" />
		<KeyWord name="AUTH_MAILBOX" />
		<KeyWord name="AVAILCAUSECODE" />
		<KeyWord name="AVAILCHAN" />
		<KeyWord name="AVAILORIGCHAN" />
		<KeyWord name="AVAILSTATUS" />
		<KeyWord name="BACKGROUNDSTATUS" />
		<KeyWord name="BLINDTRANSFER" />
		<KeyWord name="BRIDGEPEER" />
		<KeyWord name="BRIDGEPVTCALLID" />
		<KeyWord name="BRIDGERESULT" />
		<KeyWord name="CALENDAR_SUCCESS" />
		<KeyWord name="CALLEDTON" />
		<KeyWord name="CALLERANI" />
		<KeyWord name="CALLERIDNAME" />
		<KeyWord name="CALLERIDNUM" />
		<KeyWord name="CALLINGANI2" />
		<KeyWord name="CALLINGPRES" />
		<KeyWord name="CALLINGSUBADDR" />
		<KeyWord name="CALLINGTNS" />
		<KeyWord name="CALLINGTON" />
		<KeyWord name="CALLTYPE" />
		<KeyWord name="CAUSECODE" />
		<KeyWord name="CC_CANCEL_REASON" />
		<KeyWord name="CC_CANCEL_RESULT" />
		<KeyWord name="CC_REQUEST_REASON" />
		<KeyWord name="CC_REQUEST_RESULT" />
		<KeyWord name="CHANNELREDIRECT_STATUS" />
		<KeyWord name="CHECKGROUPSTATUS" />
		<KeyWord name="CHECKMD5STATUS" />
		<KeyWord name="CONFBRIDGE_RESULT" />
		<KeyWord name="CONFNO" />
		<KeyWord name="CONF_LIMIT_TIMEOUT_FILE" />
		<KeyWord name="CONF_LIMIT_WARNING_FILE" />
		<KeyWord name="CONNECTED_LINE_CALLEE_SEND_MACRO" />
		<KeyWord name="CONNECTED_LINE_CALLEE_SEND_MACRO_ARGS" />
		<KeyWord name="CONNECTED_LINE_CALLER_SEND_MACRO" />
		<KeyWord name="CONNECTED_LINE_CALLER_SEND_MACRO_ARGS" />
		<KeyWord name="CONTEXT" />
		<KeyWord name="CPLAYBACKOFFSET" />
		<KeyWord name="CPLAYBACKSTATUS" />
		<KeyWord name="CPLAYBACKSTOPKEY" />
		<KeyWord name="CURRENTCHANNEL" />
		<KeyWord name="DATETIME" />
		<KeyWord name="DBGETSTATUS" />
		<KeyWord name="DB_RESULT" />
		<KeyWord name="DIALEDPEERNAME" />
		<KeyWord name="DIALEDPEERNUMBER" />
		<KeyWord name="DIALEDTIME" />
		<KeyWord name="DIALSTATUS" />
		<KeyWord name="DIRECTORY_RESULT" />
		<KeyWord name="DISPLAY_NAME" />
		<KeyWord name="DST_ENABLE" />
		<KeyWord name="DST_END_HOUR" />
		<KeyWord name="DST_END_MDAY" />
		<KeyWord name="DST_END_MONTH" />
		<KeyWord name="DST_START_HOUR" />
		<KeyWord name="DST_START_MDAY" />
		<KeyWord name="DST_START_MONTH" />
		<KeyWord name="DUNDDEST" />
		<KeyWord name="DUNDTECH" />
		<KeyWord name="DYNAMIC_FEATURENAME" />
		<KeyWord name="DYNAMIC_FEATURES" />
		<KeyWord name="DYNAMIC_PEERNAME" />
		<KeyWord name="ENTITYID" />
		<KeyWord name="ENUM" />
		<KeyWord name="ENUMSTATUS" />
		<KeyWord name="EPOCH" />
		<KeyWord name="EXITCONTEXT" />
		<KeyWord name="EXTEN" />
		<KeyWord name="EXTENSION_LENGTH" />
		<KeyWord name="FAXBITRATE" />
		<KeyWord name="FAXERROR" />
		<KeyWord name="FAXEXTEN" />
		<KeyWord name="FAXPAGES" />
		<KeyWord name="FAXRESOLUTION" />
		<KeyWord name="FAXSTATUS" />
		<KeyWord name="FORWARD_CONTEXT" />
		<KeyWord name="GOSUB_RESULT" />
		<KeyWord name="GOTO_ON_BLINDXFR" />
		<KeyWord name="HASVMSTATUS" />
		<KeyWord name="HINTNAME" />
		<KeyWord name="INVALID_EXTEN" />
		<KeyWord name="IPADDR" />
		<KeyWord name="LABEL" />
		<KeyWord name="LIMIT_CONNECT_FILE" />
		<KeyWord name="LIMIT_PLAYAUDIO_CALLEE" />
		<KeyWord name="LIMIT_PLAYAUDIO_CALLER" />
		<KeyWord name="LIMIT_TIMEOUT_FILE" />
		<KeyWord name="LIMIT_WARNING_FILE" />
		<KeyWord name="LINE" />
		<KeyWord name="LINEKEYS" />
		<KeyWord name="LOCALHEADERINFO" />
		<KeyWord name="LOCALSTATIONID" />
		<KeyWord name="LOOKUPBLSTATUS" />
		<KeyWord name="MAC" />
		<KeyWord name="MACRO_CONTEXT" />
		<KeyWord name="MACRO_EXTEN" />
		<KeyWord name="MACRO_OFFSET" />
		<KeyWord name="MACRO_PRIORITY" />
		<KeyWord name="MACRO_RESULT" />
		<KeyWord name="MEETMEADMINSTATUS" />
		<KeyWord name="MEETMEBOOKID" />
		<KeyWord name="MEETMESECS" />
		<KeyWord name="MEETME_AGI_BACKGROUND" />
		<KeyWord name="MEETME_EXIT_CONTEXT" />
		<KeyWord name="MEETME_EXIT_KEY" />
		<KeyWord name="MEETME_RECORDINGFILE" />
		<KeyWord name="MEETME_RECORDINGFORMAT" />
		<KeyWord name="MEMBERCALLS" />
		<KeyWord name="MEMBERDYNAMIC" />
		<KeyWord name="MEMBERINTERFACE" />
		<KeyWord name="MEMBERLASTCALL" />
		<KeyWord name="MEMBERNAME" />
		<KeyWord name="MEMBERPENALTY" />
		<KeyWord name="MEMBERREALTIME" />
		<KeyWord name="MESSAGE_SEND_STATUS" />
		<KeyWord name="MIXMONITOR_FILENAME" />
		<KeyWord name="MONITOR" />
		<KeyWord name="MONITOR_EXEC" />
		<KeyWord name="MONITOR_EXEC_ARGS" />
		<KeyWord name="MONITOR_FILENAME" />
		<KeyWord name="MORSEDITLEN" />
		<KeyWord name="MORSETONE" />
		<KeyWord name="MVM_ACCMESS_STATUS" />
		<KeyWord name="MVM_CALLERID" />
		<KeyWord name="MVM_CIDNAME" />
		<KeyWord name="MVM_CIDNUM" />
		<KeyWord name="MVM_COUNTER" />
		<KeyWord name="MVM_DATE" />
		<KeyWord name="MVM_DELETE_STATUS" />
		<KeyWord name="MVM_DUR" />
		<KeyWord name="MVM_DURATION" />
		<KeyWord name="MVM_FILENAME" />
		<KeyWord name="MVM_GREET_STATUS" />
		<KeyWord name="MVM_MSGNUM" />
		<KeyWord name="MVM_NAME" />
		<KeyWord name="MVM_NOTIFY_STATUS" />
		<KeyWord name="MVM_RECORD_STATUS" />
		<KeyWord name="NUMBER" />
		<KeyWord name="ODBC_FETCH_STATUS" />
		<KeyWord name="ORIGINATE_STATUS" />
		<KeyWord name="OSPAUTHSTATUS" />
		<KeyWord name="OSPCALLING" />
		<KeyWord name="OSPDEST" />
		<KeyWord name="OSPDESTINATION" />
		<KeyWord name="OSPDESTREMAILS" />
		<KeyWord name="OSPDIALSTR" />
		<KeyWord name="OSPFINISHSTATUS" />
		<KeyWord name="OSPINACTUALSRC" />
		<KeyWord name="OSPINALTSPN" />
		<KeyWord name="OSPINAUDIOQOS" />
		<KeyWord name="OSPINCUSTOMINFON" />
		<KeyWord name="OSPINCUSTOMINFOn" />
		<KeyWord name="OSPINDIVHOST" />
		<KeyWord name="OSPINDIVUSER" />
		<KeyWord name="OSPINHANDLE" />
		<KeyWord name="OSPINMCC" />
		<KeyWord name="OSPINMNC" />
		<KeyWord name="OSPINNETWORKID" />
		<KeyWord name="OSPINNPCIC" />
		<KeyWord name="OSPINNPDI" />
		<KeyWord name="OSPINNPRN" />
		<KeyWord name="OSPINOCN" />
		<KeyWord name="OSPINPAIUSER" />
		<KeyWord name="OSPINPCIUSER" />
		<KeyWord name="OSPINPEERIP" />
		<KeyWord name="OSPINRPIDUSER" />
		<KeyWord name="OSPINSPID" />
		<KeyWord name="OSPINSPN" />
		<KeyWord name="OSPINTECH" />
		<KeyWord name="OSPINTIMELIMIT" />
		<KeyWord name="OSPINTOHOST" />
		<KeyWord name="OSPINTOKEN" />
		<KeyWord name="OSPLOOKUPSTATUS" />
		<KeyWord name="OSPNEXTSTATUS" />
		<KeyWord name="OSPOUTALTSPN" />
		<KeyWord name="OSPOUTAUDIOQOS" />
		<KeyWord name="OSPOUTCALLED" />
		<KeyWord name="OSPOUTCALLID" />
		<KeyWord name="OSPOUTCALLIDTYPES" />
		<KeyWord name="OSPOUTCALLING" />
		<KeyWord name="OSPOUTHANDLE" />
		<KeyWord name="OSPOUTMCC" />
		<KeyWord name="OSPOUTMNC" />
		<KeyWord name="OSPOUTNETWORKID" />
		<KeyWord name="OSPOUTNPCIC" />
		<KeyWord name="OSPOUTNPDI" />
		<KeyWord name="OSPOUTNPRN" />
		<KeyWord name="OSPOUTOCN" />
		<KeyWord name="OSPOUTSPID" />
		<KeyWord name="OSPOUTSPN" />
		<KeyWord name="OSPOUTTECH" />
		<KeyWord name="OSPOUTTIMELIMIT" />
		<KeyWord name="OSPOUTTOKEN" />
		<KeyWord name="OSPRESULTS" />
		<KeyWord name="OSPTECH" />
		<KeyWord name="OUTBOUND_GROUP" />
		<KeyWord name="OUTBOUND_GROUP_ONCE" />
		<KeyWord name="PARKEDAT" />
		<KeyWord name="PARKINGEXTEN" />
		<KeyWord name="PARKINGLOT" />
		<KeyWord name="PICKUPMARK" />
		<KeyWord name="PLAYBACKSTATUS" />
		<KeyWord name="PQMSTATUS" />
		<KeyWord name="PRIORITY" />
		<KeyWord name="PRIREDIRECTREASON" />
		<KeyWord name="PRIVACYMGRSTATUS" />
		<KeyWord name="PRI_CAUSE" />
		<KeyWord name="QEHOLDTIME" />
		<KeyWord name="QEORIGINALPOS" />
		<KeyWord name="QUEUEABANDONED" />
		<KeyWord name="QUEUECALLS" />
		<KeyWord name="QUEUECOMPLETED" />
		<KeyWord name="QUEUEHOLDTIME" />
		<KeyWord name="QUEUEMAX" />
		<KeyWord name="QUEUENAME" />
		<KeyWord name="QUEUEPOSITION" />
		<KeyWord name="QUEUESRVLEVEL" />
		<KeyWord name="QUEUESRVLEVELPERF" />
		<KeyWord name="QUEUESTATUS" />
		<KeyWord name="QUEUESTRATEGY" />
		<KeyWord name="QUEUE_MAX_PENALTY" />
		<KeyWord name="QUEUE_MIN_PENALTY" />
		<KeyWord name="QUEUE_PRIO" />
		<KeyWord name="READEXTENSTATUS" />
		<KeyWord name="REASON" />
		<KeyWord name="RECORDED_FILE" />
		<KeyWord name="RECORD_STATUS" />
		<KeyWord name="REDIRECTING_CALLEE_SEND_MACRO" />
		<KeyWord name="REDIRECTING_CALLEE_SEND_MACRO_ARGS" />
		<KeyWord name="REDIRECTING_CALLER_SEND_MACRO" />
		<KeyWord name="REDIRECTING_CALLER_SEND_MACRO_ARGS" />
		<KeyWord name="REMOTESTATIONID" />
		<KeyWord name="REMOTE_HOST" />
		<KeyWord name="RQMSTATUS" />
		<KeyWord name="RTPAUDIOQOS" />
		<KeyWord name="RTPVIDEOQOS" />
		<KeyWord name="SAY_DTMF_INTERRUPT" />
		<KeyWord name="SECRET" />
		<KeyWord name="SENDIMAGESTATUS" />
		<KeyWord name="SENDTEXTSTATUS" />
		<KeyWord name="SENDURLSTATUS" />
		<KeyWord name="SERVER" />
		<KeyWord name="SERVER_PORT" />
		<KeyWord name="SIPCALLID" />
		<KeyWord name="SIPDOMAIN" />
		<KeyWord name="SIPFROMDOMAIN" />
		<KeyWord name="SIPFROMUSER" />
		<KeyWord name="SIPURI" />
		<KeyWord name="SIPUSERAGENT" />
		<KeyWord name="SIP_CODEC" />
		<KeyWord name="SIP_CODEC_INBOUND" />
		<KeyWord name="SIP_CODEC_OUTBOUND" />
		<KeyWord name="SIP_MAX_FORWARDS" />
		<KeyWord name="SIP_RECVADDR" />
		<KeyWord name="SIP_URI_OPTIONS" />
		<KeyWord name="SKINNY_PRIVATE" />
		<KeyWord name="SLASTATION_STATUS" />
		<KeyWord name="SLATRUNK_STATUS" />
		<KeyWord name="SMDI_VM_TYPE" />
		<KeyWord name="SPYGROUP" />
		<KeyWord name="SPY_CHANNEL" />
		<KeyWord name="SPY_EXIT_CONTEXT" />
		<KeyWord name="SYSTEMNAME" />
		<KeyWord name="SYSTEMSTATUS" />
		<KeyWord name="TALK_DETECTED" />
		<KeyWord name="TIMESTAMP" />
		<KeyWord name="TIMEZONE" />
		<KeyWord name="TOUCH_MIXMONITOR" />
		<KeyWord name="TOUCH_MIXMONITOR_FORMAT" />
		<KeyWord name="TOUCH_MIXMONITOR_OUTPUT" />
		<KeyWord name="TOUCH_MONITOR" />
		<KeyWord name="TOUCH_MONITOR_FORMAT" />
		<KeyWord name="TOUCH_MONITOR_MESSAGE_START" />
		<KeyWord name="TOUCH_MONITOR_MESSAGE_STOP" />
		<KeyWord name="TOUCH_MONITOR_OUTPUT" />
		<KeyWord name="TOUCH_MONITOR_PREF" />
		<KeyWord name="TOUCH_MONITOR_PREFIX" />
		<KeyWord name="TRANSFERCAPABILITY" />
		<KeyWord name="TRANSFERSTATUS" />
		<KeyWord name="TRANSFER_CONTEXT" />
		<KeyWord name="TRYSTATUS" />
		<KeyWord name="TXTCIDNAMESTATUS" />
		<KeyWord name="TZOFFSET" />
		<KeyWord name="UNIQUEID" />
		<KeyWord name="UPQMSTATUS" />
		<KeyWord name="USERNAME" />
		<KeyWord name="VMBOXEXISTSSTATUS" />
		<KeyWord name="VMSTATUS" />
		<KeyWord name="VM_CALLERID" />
		<KeyWord name="VM_CATEGORY" />
		<KeyWord name="VM_CIDNAME" />
		<KeyWord name="VM_CIDNUM" />
		<KeyWord name="VM_DATE" />
		<KeyWord name="VM_DUR" />
		<KeyWord name="VM_MAILBOX" />
		<KeyWord name="VM_MESSAGEFILE" />
		<KeyWord name="VM_MSGNUM" />
		<KeyWord name="VM_NAME" />
		<KeyWord name="VOCIEMAIL_EXTEN" />
		<KeyWord name="VOICEMAIL_PLAYBACKSTATUS" />
		<KeyWord name="VPB_GETDTMF" />
		<KeyWord name="VXML_URL" />
		<KeyWord name="WAITSTATUS" />
		<KeyWord name="WAITUNTILSTATUS" />
		<KeyWord name="ZAPATELLERSTATUS" />
		<KeyWord name="eventextra" />
		<KeyWord name="eventtime" />
		<KeyWord name="eventtype" />
		<!-- CONSTANTS AND SYSTEM EVENTS -->
		<KeyWord name="3K1AUDIO" />
		<KeyWord name="3WAY_END" />
		<KeyWord name="3WAY_START" />
		<KeyWord name="ABORT" />
		<KeyWord name="ABSOLUTETIMEOUT" />
		<KeyWord name="ADDED" />
		<KeyWord name="ALREADY_LOGGED_IN" />
		<KeyWord name="ANSWER" />
		<KeyWord name="ANSWERED" />
		<KeyWord name="APPERROR" />
		<KeyWord name="APP_END" />
		<KeyWord name="APP_START" />
		<KeyWord name="ASSISTANT" />
		<KeyWord name="ASTERISK_VERSION_NUM" />
		<KeyWord name="AST_DEVICE_BUSY" />
		<KeyWord name="AST_DEVICE_INUSE" />
		<KeyWord name="AST_DEVICE_INVALID" />
		<KeyWord name="AST_DEVICE_NOT_INUSE" />
		<KeyWord name="AST_DEVICE_ONHOLD" />
		<KeyWord name="AST_DEVICE_RINGING" />
		<KeyWord name="AST_DEVICE_RINGINUSE" />
		<KeyWord name="AST_DEVICE_UNAVAILABLE" />
		<KeyWord name="AST_DEVICE_UNKNOWN" />
		<KeyWord name="ATTENDEDTRANSFER" />
		<KeyWord name="BILLING" />
		<KeyWord name="BRIDGE_END" />
		<KeyWord name="BRIDGE_ENTER" />
		<KeyWord name="BRIDGE_EXIT" />
		<KeyWord name="BRIDGE_START" />
		<KeyWord name="BRIDGE_UPDATE" />
		<KeyWord name="BUILD_DATE" />
		<KeyWord name="BUILD_HOSTNAME" />
		<KeyWord name="BUILD_KERNEL" />
		<KeyWord name="BUILD_MACHINE" />
		<KeyWord name="BUILD_OS" />
		<KeyWord name="BUILD_USER" />
		<KeyWord name="BUSY" />
		<KeyWord name="CANCEL" />
		<KeyWord name="CHANNEL_END" />
		<KeyWord name="CHANNEL_START" />
		<KeyWord name="CHANUNAVAIL" />
		<KeyWord name="CHAN_END" />
		<KeyWord name="CHAN_START" />
		<KeyWord name="CNG" />
		<KeyWord name="CONF_END" />
		<KeyWord name="CONF_ENTER" />
		<KeyWord name="CONF_EXIT" />
		<KeyWord name="CONF_START" />
		<KeyWord name="CONGESTION" />
		<KeyWord name="CONTINUE" />
		<KeyWord name="CONTROL" />
		<KeyWord name="DBGM_ALL" />
		<KeyWord name="DBGM_APPL" />
		<KeyWord name="DBGM_BC" />
		<KeyWord name="DBGM_BCDATA" />
		<KeyWord name="DBGM_CDATA" />
		<KeyWord name="DBGM_CONN" />
		<KeyWord name="DBGM_DDATA" />
		<KeyWord name="DBGM_FSM" />
		<KeyWord name="DBGM_ISDN" />
		<KeyWord name="DBGM_L2" />
		<KeyWord name="DBGM_L3" />
		<KeyWord name="DBGM_L3DATA" />
		<KeyWord name="DBGM_MAN" />
		<KeyWord name="DBGM_MSG" />
		<KeyWord name="DBGM_NET" />
		<KeyWord name="DBGM_SDATA" />
		<KeyWord name="DBGM_SOCK" />
		<KeyWord name="DBGM_SOUND" />
		<KeyWord name="DBGM_TEI" />
		<KeyWord name="DBGM_TONE" />
		<KeyWord name="DBGM_TOPLEVEL" />
		<KeyWord name="DIGITAL" />
		<KeyWord name="DIGITAL_W_TONES" />
		<KeyWord name="DISABLED" />
		<KeyWord name="DOCUMENTATION" />
		<KeyWord name="DONTCALL" />
		<KeyWord name="DTMF" />
		<KeyWord name="DTMF_BEGIN" />
		<KeyWord name="DTMF_END" />
		<KeyWord name="ENABLED" />
		<KeyWord name="ENDMARKED" />
		<KeyWord name="ERROR" />
		<KeyWord name="FAIL" />
		<KeyWord name="FAILED" />
		<KeyWord name="FAILURE" />
		<KeyWord name="FORWARD" />
		<KeyWord name="FREE" />
		<KeyWord name="FULL" />
		<KeyWord name="HANGUP" />
		<KeyWord name="HOLDINUSE" />
		<KeyWord name="HOOKFLASH" />
		<KeyWord name="HTML" />
		<KeyWord name="HUMAN" />
		<KeyWord name="IMAGE" />
		<KeyWord name="INCOMPATIBLE" />
		<KeyWord name="INITIALSILENCE" />
		<KeyWord name="INUSE" />
		<KeyWord name="INVALID" />
		<KeyWord name="INVALIDARGS" />
		<KeyWord name="INVALID_PROTOCOL" />
		<KeyWord name="INVALID_URI" />
		<KeyWord name="JOINEMPTY" />
		<KeyWord name="JOINUNAVAIL" />
		<KeyWord name="KICKED" />
		<KeyWord name="LEAVEEMPTY" />
		<KeyWord name="LEAVEUNAVAIL" />
		<KeyWord name="LINKEDID_END" />
		<KeyWord name="LOCAL_OPTIMIZE" />
		<KeyWord name="LOCAL_REINVITE" />
		<KeyWord name="LOGGEDIN" />
		<KeyWord name="LOGGEDOUT" />
		<KeyWord name="LONGGREETING" />
		<KeyWord name="LOOP" />
		<KeyWord name="MACHINE" />
		<KeyWord name="MAXWORDLENGTH" />
		<KeyWord name="MEMBERALREADY" />
		<KeyWord name="MODEM" />
		<KeyWord name="NOANSWER" />
		<KeyWord name="NOAPP" />
		<KeyWord name="NOCHANNEL" />
		<KeyWord name="NOLOAD" />
		<KeyWord name="NONEXISTENT" />
		<KeyWord name="NOPARSE" />
		<KeyWord name="NOSUCHQUEUE" />
		<KeyWord name="NOTDYNAMIC" />
		<KeyWord name="NOTFOUND" />
		<KeyWord name="NOTHING" />
		<KeyWord name="NOTINQUEUE" />
		<KeyWord name="NOTSURE" />
		<KeyWord name="NOT_CONNECTED" />
		<KeyWord name="NOT_GENERIC" />
		<KeyWord name="NOT_INUSE" />
		<KeyWord name="NOT_LOGGED_IN" />
		<KeyWord name="NO_CORE_INSTANCE" />
		<KeyWord name="NULL" />
		<KeyWord name="OK" />
		<KeyWord name="OMIT" />
		<KeyWord name="ONHOLD" />
		<KeyWord name="OPERATOR" />
		<KeyWord name="PARKEDLOT" />
		<KeyWord name="PARKER" />
		<KeyWord name="PARKER_FLAT" />
		<KeyWord name="PARKINGSLOT" />
		<KeyWord name="PARKING_SPACE" />
		<KeyWord name="PARK_END" />
		<KeyWord name="PARK_START" />
		<KeyWord name="PAST" />
		<KeyWord name="PAUSED" />
		<KeyWord name="PICKUP" />
		<KeyWord name="REJECTED" />
		<KeyWord name="REMOTESTOPPED" />
		<KeyWord name="REMOTE_REINVITE" />
		<KeyWord name="REMOVED" />
		<KeyWord name="RESPONSETIMEOUT" />
		<KeyWord name="RESTRICTED_DIGITAL" />
		<KeyWord name="RINGING" />
		<KeyWord name="RINGINUSE" />
		<KeyWord name="RINGTIMEOUT" />
		<KeyWord name="SELECTED" />
		<KeyWord name="SILENCE" />
		<KeyWord name="SKIP" />
		<KeyWord name="SUCCESS" />
		<KeyWord name="TENTATIVE" />
		<KeyWord name="TEXT" />
		<KeyWord name="TOOLONG" />
		<KeyWord name="TOO_MANY_REQUESTS" />
		<KeyWord name="TORTURE" />
		<KeyWord name="TRANSFER" />
		<KeyWord name="UNANSWERED" />
		<KeyWord name="UNAVAILABLE" />
		<KeyWord name="UNKNOWN" />
		<KeyWord name="UNPAUSED" />
		<KeyWord name="UNSPECIFIED" />
		<KeyWord name="UNSUPPORTED" />
		<KeyWord name="USEREXIT" />
		<KeyWord name="USERSTOPPED" />
		<KeyWord name="USER_DEFINED" />
		<KeyWord name="VIDEO" />
		<KeyWord name="VOICE" />
		<KeyWord name="ZAPPED" />
		<!-- CHANNEL DRIVERS, CHANNEL TYPES AND TECHNOLOGIES -->
		<KeyWord name="Agent" />
		<KeyWord name="CAPI" />
		<KeyWord name="Console" />
		<KeyWord name="DAHDI" />
		<KeyWord name="DUNDi" />
		<KeyWord name="GTalk" />
		<KeyWord name="H323" />
		<KeyWord name="IAX" />
		<KeyWord name="IAX2" />
		<KeyWord name="JINGLE" />
		<KeyWord name="Local" />
		<KeyWord name="MGCP" />
		<KeyWord name="Mobile" />
		<KeyWord name="Modem" />
		<KeyWord name="Motif" />
		<KeyWord name="MulticastRTP" />
		<KeyWord name="OOH323" />
		<KeyWord name="PJSIP" />
		<KeyWord name="Phone" />
		<KeyWord name="SCCP" />
		<KeyWord name="SIP" />
		<KeyWord name="Skinny" />
		<KeyWord name="Unistim" />
		<KeyWord name="VPB" />
		<KeyWord name="XMPP" />
		<KeyWord name="Zap" />
		<KeyWord name="mISDN" />
	</AutoComplete>
</NotepadPlus>
